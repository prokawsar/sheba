{"version":3,"file":"chunk-6c4a6fb2.js","sources":["../../../src/utils/validatePassword.js","../../../src/components/helpers/PasswordValidator.html"],"sourcesContent":["export default function(password){\r\n  var result = {\r\n    'overall': false,\r\n    'min_length': false,\r\n    'special': false,\r\n    'uppercase': false,\r\n    'lowercase': false,\r\n    'digit': false\r\n  },\r\n  regex = {\r\n    'min_length': 8,\r\n    'special': \"[^A-Za-z0-9]\", // Special Character\r\n    'uppercase': \"[A-Z]\", // Uppercase Alphabets\r\n    'lowercase': \"[a-z]\", // Lowercase Alphabets\r\n    'digit': \"[0-9]\" // Numbers\r\n  };\r\n\r\n  Object.entries(regex).forEach((item) => {\r\n    if (item[0] == 'min_length') {\r\n      if (password && password.length >= item[1]) {\r\n        result[item[0]] = true\r\n      }\r\n    }else {\r\n      if (new RegExp(item[1]).test(password)) {\r\n        result[item[0]] = true\r\n      }\r\n    }\r\n  });\r\n\r\n  var passed = 0,\r\n  values = Object.values(result);\r\n  values.forEach((item) => {\r\n    if(item){\r\n      passed++;\r\n    }\r\n  });\r\n  if(passed == (values.length - 1)){\r\n    result.overall = true;\r\n  }\r\n\r\n  return result;\r\n}","<div class=\"level is-mobile\" style=\"margin:0;max-width: 100%;\">\r\n  <div class=\"level-left\" style=\"max-width: 60%\">\r\n    <div class=\"level-item\" style=\"max-width: 100%\">\r\n      {#if new_pass && !result.overall}\r\n        <p class=\"help has-text-danger\">\r\n          Should be at least 8 characters in length and include at least one lower-case letter, one upper-case letter, one number, and one special character.\r\n        </p>\r\n      {:elseif new_pass && result.overall}\r\n        <p class=\"help has-text-success\">\r\n          Password is strong.\r\n        </p>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n  <div class=\"level-right\">\r\n    <span class=\"tags\">\r\n      <span class=\"tag is-small is-{result.min_length ? 'success' : 'danger'}\">8+</span>\r\n      <span class=\"tag is-small is-{result.lowercase ? 'success' : 'danger'}\">a-z</span>\r\n      <span class=\"tag is-small is-{result.uppercase ? 'success' : 'danger'}\">A-Z</span>\r\n      <span class=\"tag is-small is-{result.digit ? 'success' : 'danger'}\">0-9</span>\r\n      <span class=\"tag is-small is-{result.special ? 'success' : 'danger'}\">!#@</span>\r\n    </span>\r\n  </div>\r\n</div>\r\n\r\n<script>\r\nimport pwd from '../../utils/validatePassword';\r\n\r\nexport default {\r\n    components:{\r\n    },\r\n    data(){\r\n      return {\r\n        new_pass: '',\r\n        valid: false\r\n      }\r\n    },\r\n    computed:{\r\n      result({new_pass}){\r\n        return pwd(new_pass);\r\n      },\r\n      valid({result}){\r\n        return result.overall\r\n      }\r\n    }\r\n}\r\n\r\n</script>"],"names":["password","result","overall","min_length","special","uppercase","lowercase","digit","Object","entries","forEach","item","length","RegExp","test","passed","values","new_pass","pwd","valid"],"mappings":"gOAAe,aAASA,GACtB,IAAIC,EAAS,CACXC,SAAW,EACXC,YAAc,EACdC,SAAW,EACXC,WAAa,EACbC,WAAa,EACbC,OAAS,GAUXC,OAAOC,QARC,CACNN,WAAc,EACdC,QAAW,eACXC,UAAa,QACbC,UAAa,QACbC,MAAS,UAGWG,QAASC,IACd,cAAXA,EAAK,GACHX,GAAYA,EAASY,QAAUD,EAAK,KACtCV,EAAOU,EAAK,KAAM,GAGhB,IAAIE,OAAOF,EAAK,IAAIG,KAAKd,KAC3BC,EAAOU,EAAK,KAAM,KAKxB,IAAII,EAAS,EACbC,EAASR,OAAOQ,OAAOf,GAUvB,OATAe,EAAON,QAASC,IACXA,GACDI,MAGDA,GAAWC,EAAOJ,OAAS,IAC5BX,EAAOC,SAAU,GAGZD,mBCFIgB,SAACA,IACN,OAAOC,IAAID,mBAEPhB,OAACA,IACL,OAAOA,EAAOC,wBAVhB,MAAO,CACLe,SAAU,GACVE,OAAO,mHA/BJF,aAAahB,OAAOC,0BAIhBe,YAAYhB,OAAOC,irBASED,OAAOE,WAAa,UAAY,8CAChCF,OAAOK,UAAY,UAAY,8CAC/BL,OAAOI,UAAY,UAAY,8CAC/BJ,OAAOM,MAAQ,UAAY,8CAC3BN,OAAOG,QAAU,UAAY,mgBAJ7BH,OAAOE,WAAa,UAAY,mEAChCF,OAAOK,UAAY,UAAY,mEAC/BL,OAAOI,UAAY,UAAY,mEAC/BJ,OAAOM,MAAQ,UAAY,mEAC3BN,OAAOG,QAAU,UAAY"}