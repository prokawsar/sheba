{"version":3,"file":"Search.js","sources":["../../../src/components/views/search/Search.html"],"sourcesContent":["<div class=\"page-content\">\r\n\r\n  <PageTitle page=\"{page}\">\r\n    <!-- <a class=\"button is-info is-pulled-right\" href=\"#remedies\">\r\n      <Icon icon=\"long-arrow-left\" size=\"small\" />\r\n      <span>Back to All Remedies</span>\r\n    </a> -->\r\n  </PageTitle>\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message}>\r\n\r\n    {#if tracker.error}\r\n    <Notification type=\"danger\">\r\n      {error_message}\r\n    </Notification>\r\n    {/if}\r\n\r\n    <PatientAdd bind:patient on:addPatient bind:data bind:p_data />\r\n    <br>\r\n  {#if !has_searched}\r\n    <form on:submit=\"search(event)\">\r\n      <Panel title=\"Patient Symptoms\" has_toolbar={true} >\r\n\r\n        <div class=\"columns\">\r\n          <div class=\"column\">\r\n            <Message title=\"Records\" color='light'>\r\n              {#each Object.entries(data) as [key, value], i}\r\n                <p><span class=\"has-text-weight-bold is-size-5\">{key}</span>: {value}</p> <br>\r\n              {/each}\r\n            </Message>\r\n          </div>\r\n\r\n          <div class=\"column\">\r\n\r\n            <div class=\"field\">\r\n              <span class=\"select is-fullwidth\">\r\n                <select class=\"input\" bind:value=\"selected_symptom\" >\r\n                  <option value=\"\">Select Type</option>\r\n                  {#each Object.entries(data) as [key, value], i}\r\n                    {#if !omitted_field.includes(key)}\r\n                      <option value=\"{key}\">{key}</option>\r\n                    {/if}\r\n                  {/each}\r\n                </select>\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\" style=\"text-transform: capitalize;\">{selected_symptom}</label>\r\n                <textarea class=\"textarea\" placeholder=\"{selected_symptom}...\" bind:value=\"data[selected_symptom]\" style=\"height: 15rem;\"></textarea>\r\n              </p>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"column\">\r\n            <p class=\"title is-5\">Suggestions</p>\r\n\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\" style=\"text-transform: capitalize;\">{selected_symptom} Symptoms in the System</label>\r\n                  <SearchableSelect\r\n                    data=\"{searchable_withkey[selected_symptom]}\"\r\n                    placeholder=\"Choose...\"\r\n                    bind:_name=\"selected_keyed_symp\"\r\n                    searchKey=\"name\"\r\n                    searchValue=\"id\"\r\n                  />\r\n              </p>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\" style=\"text-transform: capitalize;\">All Symptoms in the System</label>\r\n                  <SearchableSelect\r\n                    data=\"{searchable_symp}\"\r\n                    placeholder=\"Choose...\"\r\n                    bind:_name=\"selected_symp\"\r\n                    searchKey=\"name\"\r\n                    searchValue=\"id\"\r\n                  />\r\n              </p>\r\n            </div>\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\">&nbsp;</label>\r\n                <SubmitButton classes=\"is-primary is-medium is-pulled-right\" icon=\"search\" icon_size=\"small\" text=\"Search\" bind:tracker />\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Panel>\r\n    </form>\r\n      <br>\r\n  {/if}\r\n\r\n  {#if has_searched}\r\n  <div class=\"columns\">\r\n    <div class=\"column\">\r\n      <RemedyFound    \r\n        bind:data\r\n        bind:tracker\r\n        bind:remedy_found\r\n        {field_name}\r\n        {result_symptoms}\r\n        on:back=\"back()\"\r\n        on:showSymptoms\r\n        on:saveHistory=\"saveHistory()\"\r\n      />\r\n    </div>\r\n    <div class=\"column\">\r\n      <Treatment\r\n        bind:remedy_names\r\n        bind:data\r\n        bind:tracker\r\n        bind:remedy_found\r\n        {result_symptoms}\r\n        on:saveTreatment\r\n      />\r\n    </div>\r\n  </div>\r\n  \r\n  <br>\r\n  {/if}\r\n  \r\n  {#if has_searched && !data.patient}\r\n    <div class=\"columns is-centered\">\r\n      <label class=\"subtitle is-size-5 has-text-warning is-centered\"> Selection patient is mendatory for saving Case History or Treatment ! </label>\r\n      \r\n    </div>\r\n  {/if}\r\n  \r\n  {#if !has_searched}\r\n \r\n  <Panel title=\"Sections\" has_toolbar={true} >\r\n    <div slot='toolbar'>\r\n      <ConfirmButton\r\n          text=\"Reset\"\r\n          color=\"danger\"\r\n          size=\"\"\r\n          icon=\"refresh\"\r\n          icon_only=\"{false}\"\r\n          disabled=\"{false}\"\r\n          on:do=\"reset(event)\"\r\n        />\r\n    </div>\r\n\r\n    <div class=\"columns\">\r\n      <div class=\"column\">\r\n        {#if remedies.length}\r\n        <div class=\"columns\">\r\n          <div class=\"column\">\r\n            <label class=\"label\">With Number</label>\r\n            <div class=\"field\">\r\n              <span class=\"select is-fullwidth\">\r\n                <select class=\"input\" bind:value=\"selected_symptom\" >\r\n                  <option value=\"\">Select Type</option>\r\n                  {#each filterFields as key, index }\r\n                      <option value=\"{key}\">{index+1} - {key}</option>\r\n                  {/each}\r\n                </select>\r\n              </span>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"column\">\r\n            <label class=\"label\">Without Number</label>\r\n            <div class=\"field\">\r\n              <span class=\"select is-fullwidth\">\r\n                <select class=\"input\" bind:value=\"selected_symptom\" >\r\n                  <option value=\"\">Select Type</option>\r\n                  {#each filterFields as key, index }\r\n                      <option value=\"{key}\">{key}</option>\r\n                  {/each}\r\n                </select>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"columns\">\r\n          <div class=\"column\">\r\n            <div class=\"buttons\">\r\n              {#each filterFields as key }\r\n                  <button type=\"button\" class=\"button is-medium is-{ (key == selected_symptom) ? 'success' : data[key] ? '' : 'info' } \" on:click=\"select_symptom(key)\" style=\"text-transform: capitalize; margin-left: .6rem; margin-bottom: .6rem;\">\r\n                    {#if data[key] }\r\n                      <span class=\"icon is-small\"><i class=\"fa fa-check\"></i></span>\r\n                    {/if}\r\n                    <span>{key}</span>\r\n                  </button>\r\n              {/each}\r\n              </div>\r\n\r\n          </div>\r\n        </div>\r\n        {/if}\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </Panel>\r\n  {/if}\r\n  </ViewScaffold>\r\n</div>\r\n\r\n<script>\r\n  import Model from '../../../models/histories';\r\n  import Remedies from '../../../models/remedies';\r\n  import TreatmentModel from '../../../models/treatments';\r\n  \r\n  import Router from '../../../services/router';\r\n  import { Icon, Notification, Panel, Message } from '@kws3/helpers';\r\n  import { SubmitButton, ConfirmButton } from '@kws3/buttons';\r\n  import SearchResult from './helpers/SearchResult.html';\r\n  import SearchableSelect from '@kws3/searchable-select';\r\n  import PatientAdd from './helpers/PatientAdd.html';\r\n  import RemedyFound from './helpers/RemedyFound.html';\r\n  import Treatment from './helpers/Treatment.html';\r\n  \r\n  export default {\r\n    components: {\r\n      ViewScaffold: '../../helpers/ViewScaffold.html',\r\n      PageTitle: '../../helpers/PageTitle.html',\r\n      Panel, Notification, SubmitButton, Treatment, Message,\r\n      SearchableSelect, ConfirmButton, PatientAdd, RemedyFound\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        is_loading: false,\r\n        is_error: false,\r\n        error_message: '',\r\n        is_active_case_modal: false,\r\n        selected_symptom: '',\r\n        selected_symp: '',\r\n        selected_keyed_symp: '',\r\n        result_symptoms: '',\r\n        remedies: {},\r\n        data: {},\r\n        remedy_found: {},\r\n        remedy_names: [],\r\n        omitted_field: [ 'id', 'name', 'created', 'modified', 'deleted', 'patient', 'treatments', 'book_references', 'total_data_size'],\r\n        patient: {\r\n          name: '',\r\n          age: '',\r\n          gender: '',\r\n          phone: '',\r\n          address: '',\r\n          patient_type: 'none'\r\n        },\r\n        tracker: {\r\n          saving: false,\r\n          saved: false,\r\n          error: false,\r\n        },\r\n        page: {\r\n          title: 'Search Remedy',\r\n          icon: 'search',\r\n          icon_badge: 'plus'\r\n        },\r\n        valid:false\r\n      }\r\n    },\r\n    computed: {\r\n      has_searched: ({remedy_found}) => Object.keys(remedy_found).length,\r\n      user_role: ({ $user }) => $user && $user.role,\r\n      filterFields: ({remedies, omitted_field}) => {\r\n\r\n        let last = ['built', 'constitution', 'diathesis', 'miasm', 'temperament', 'temperature_and_weather',\r\n         'thermal_sensitivity', 'sensation', 'tendency_take_cold', 'desires', 'aversions', 'birth_history_milestones',\r\n         'tissues', 'stages_and_states', 'attacks_and_side', 'ailments_from', 'affections', 'clinical', 'modalities',\r\n         'mental_state_and_disorders', 'appearance_and_behavior', 'attention_and_concentration', 'expression',\r\n         'consciousness', 'mood_and_affect', 'memory', 'speech', 'thoughts_and_ideas', 'perception', 'intelligence',\r\n         'judgment', 'fear_and_live_alone', 'boring', 'peaceful', 'anger', 'hobby', 'habit', 'addiction', 'nutrition',\r\n         'anaemia', 'cyanosis', 'dehydration', 'jaundice', 'pulse', 'breathing', 'peculiar_rare_symptoms'\r\n        ];\r\n\r\n        let filtered = [];\r\n        if(remedies.length){\r\n          for(let [key, value] of Object.entries(remedies[0])) {\r\n            if( !last.includes(key) && !omitted_field.includes(key)){\r\n              filtered.push(key)\r\n            }\r\n          }\r\n          filtered.push(...last)\r\n          return filtered\r\n        }\r\n      },\r\n      remedy_names: ({remedies}) => {\r\n        let _names= [];\r\n        \r\n        for(let item in remedies){\r\n          let single = remedies[item];\r\n          _names.push(single.name);\r\n        }\r\n        return _names;\r\n      },\r\n      loadSymptoms: ({remedies}) => {\r\n        let symptoms = {}, _symp = [];\r\n        // let _symp = []\r\n        \r\n        for(let i in remedies){\r\n          Object.entries(remedies[i]).forEach(([key, value]) => {\r\n          _symp[key] = []\r\n          })\r\n          break;\r\n        }\r\n        for(let item in remedies){\r\n          let single = remedies[item];\r\n\r\n          Object.entries(single).forEach(([key, value]) => {\r\n            if(value){\r\n              if(typeof value == 'string'){\r\n                _symp[key].push(value.split(','))\r\n              }\r\n              symptoms[key] = (symptoms[key] ? symptoms[key] : '') + ', ' + value;\r\n            }\r\n          })\r\n        }\r\n        return _symp\r\n      },\r\n      searchable_withkey({loadSymptoms}){\r\n        let final = [], total = 0;\r\n\r\n        Object.entries(loadSymptoms).forEach(([key, value]) => {\r\n          let one = loadSymptoms[key];\r\n            final[key] = [];\r\n            for(let i in one){\r\n              if(Array.isArray(one[i])){\r\n                for(let ind in one[i]){\r\n                  final[key].push({ id: total++, name: one[i][ind] })\r\n                }\r\n              }\r\n            }\r\n          })\r\n        return final\r\n      },\r\n      searchable_symp({loadSymptoms}){\r\n        let final = [], total = 0;\r\n        for(let item in loadSymptoms){\r\n          let one = loadSymptoms[item];\r\n          \r\n            for(let i in one){\r\n              if(Array.isArray(one[i])){\r\n                for(let ind in one[i]){\r\n                  let value = one[i][ind] + ' -> ' + item;\r\n                  final.push({ id: total++, name: value })\r\n                }\r\n              }\r\n            }\r\n          }\r\n        return final\r\n      }\r\n    },\r\n    oncreate(){\r\n\r\n      this.on('state', ({ changed, current, previous }) => {\r\n        let {data, selected_symptom} = this.get()\r\n\r\n        if(current.selected_keyed_symp != previous.selected_keyed_symp){\r\n          // got it selected symptom\r\n          data[selected_symptom] =  data[selected_symptom] ? data[selected_symptom]  + ', ' + current.selected_keyed_symp : current.selected_keyed_symp;\r\n          this.set({data})\r\n        }\r\n\r\n      });\r\n      \r\n      this.on('saveTreatment', treatments => {\r\n        this.saveTreatment(treatments)\r\n      });\r\n      \r\n      this.on('addPatient', patient => {\r\n        let {data} = this.get();\r\n        data.patient = patient;\r\n        this.set({data});\r\n      });\r\n\r\n      this.on('showSymptoms', value => {\r\n        this.showSymptoms(value);\r\n      })\r\n\r\n      this.loadRemedies();\r\n    },\r\n    methods: {\r\n      loadRemedies(){\r\n        Remedies.getAll({limit:1000})\r\n        .then( (r) => {\r\n          this.set({ remedies: r.response })\r\n        })\r\n        .catch( (r) => {\r\n          console.log(r)\r\n        })\r\n      },\r\n      reset(comp){\r\n        comp && comp.doing()\r\n        this.set({ data: {}, p_data: {} })\r\n        this.set({ remedy_found: {} })\r\n        comp && comp.done();\r\n      },\r\n      back(){\r\n        this.set({ remedy_found: {} })\r\n        this.set({ result_symptoms: {} })\r\n\r\n      },\r\n      select_symptom(key){\r\n        this.set({ selected_symptom: key })\r\n      },\r\n      showSymptoms(value){\r\n        // let fields = value.field.split(', '),\r\n\r\n        this.set({ result_symptoms: value.symptoms, field_name: value.field })\r\n      },\r\n      saveHistory(){\r\n        let {data} = this.get();\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        Model.create(data)\r\n        .then( (r) => {\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: true,\r\n              error: false\r\n            },\r\n            data: r.response,\r\n          });\r\n\r\n          setTimeout( () => {\r\n            this.set({ tracker: { saved: false } });\r\n            this.reset()\r\n          }, 1500);\r\n\r\n        })\r\n        .catch( (r) => {\r\n          if (r.response.records.errorCode == '406') {\r\n            this.set({error_message: r.response.records.userMessage});\r\n          }else{\r\n            this.set({error_message: 'There was an error adding history'});\r\n          }\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: false,\r\n              error: true\r\n            }\r\n          });\r\n\r\n          setTimeout( () => {\r\n            this.set({ tracker: { error: false } });\r\n          }, 3000);\r\n\r\n        });\r\n      },\r\n      saveTreatment(treatments){\r\n        let {data} = this.get();\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n        \r\n        TreatmentModel.createWithCase({data: treatments, case: data})\r\n        .then( (r) => {\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: true,\r\n              error: false\r\n            }\r\n          });\r\n\r\n          setTimeout( () => {\r\n            this.set({ tracker: { saved: false } });\r\n            this.reset()\r\n          }, 1500);\r\n          \r\n        })\r\n        .catch( (r) => {\r\n          console.log(r)\r\n        })\r\n        \r\n        \r\n      },\r\n      search(e) {\r\n        e.preventDefault();\r\n\r\n        var { data, valid, remedies }  = this.get();\r\n        let _payload = [];\r\n        let matched_remedies = {};\r\n\r\n        console.log(data)\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n\r\n        //reducing null fields from payload\r\n        for(let [key, value] of Object.entries(data)) {\r\n          if(value && key != 'patient'){\r\n            console.log(value)\r\n            _payload[key] = value.split(',')\r\n          }\r\n        }\r\n        // console.log(_payload)\r\n\r\n        for(let [key, values] of Object.entries(_payload)) { // values are array of symptoms\r\n          values.forEach( (value) => {\r\n            remedies.forEach( (remedy) => {\r\n              if(remedy[key] != '' && remedy[key] ){\r\n                remedy[key].split(',').forEach( (symptom) =>{ // matching with each symptoms for remedy\r\n\r\n                  if(symptom.trim() === value.trim() && value.trim() != ''){\r\n                    if( matched_remedies.hasOwnProperty(remedy['name']) ){\r\n                      matched_remedies[remedy['name']].mark++;\r\n                      matched_remedies[remedy['name']].field += ', ' + key;\r\n                      matched_remedies[remedy['name']].symptoms += ', ' + value.trim();\r\n\r\n                    }else{\r\n                      matched_remedies[remedy['name']] = {};\r\n                      matched_remedies[remedy['name']].field = key;\r\n                      matched_remedies[remedy['name']].mark = 1;\r\n                      matched_remedies[remedy['name']].symptoms = value.trim();\r\n\r\n                    }\r\n                  }\r\n                })\r\n              }\r\n              // if(remedy[key].includes(value.trim())){ // currently matching with whole value\r\n\r\n              //   if(matched_remedies[remedy['name']]){\r\n              //     matched_remedies[remedy['name']]++\r\n              //   }else{\r\n              //     matched_remedies[remedy['name'].trim()] = 1;\r\n              //   }\r\n              // }\r\n            })\r\n          })\r\n        }\r\n        this.set({ remedy_found: matched_remedies})\r\n\r\n        setTimeout( () => {\r\n          this.set({ tracker: { saved: false } });\r\n          Router.navigate('search');\r\n        }, 1500);\r\n\r\n      },\r\n\r\n    }\r\n  }\r\n\r\n</script>"],"names":["remedy_found","Object","keys","length","$user","role","remedies","omitted_field","last","filtered","key","value","entries","includes","push","_names","item","single","name","_symp","i","forEach","split","loadSymptoms","final","total","one","Array","isArray","ind","id","is_loading","is_error","error_message","is_active_case_modal","selected_symptom","selected_symp","selected_keyed_symp","result_symptoms","data","remedy_names","patient","age","gender","phone","address","patient_type","tracker","saving","saved","error","page","title","icon","icon_badge","valid","[object Object]","Remedies","getAll","limit","then","r","this","set","response","catch","console","log","comp","doing","p_data","done","symptoms","field_name","field","get","Model","create","setTimeout","reset","records","errorCode","userMessage","treatments","TreatmentModel","createWithCase","case","e","preventDefault","_payload","matched_remedies","values","remedy","symptom","trim","hasOwnProperty","mark","Router","navigate","on","changed","current","previous","saveTreatment","showSymptoms","loadRemedies","select_symptom","has_searched","searchable_withkey","searchable_symp","search","event","back","saveHistory","filterFields","index"],"mappings":"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"}