{"version":3,"file":"ViewHistory.js","sources":["../../../src/components/views/casehistory/ViewHistoryStatic.html","../../../src/components/views/casehistory/ViewHistoryEdit.html","../../../src/components/views/casehistory/ViewHistory.html"],"sourcesContent":["<div class=\"page-content\">\r\n  <!-- <PageTitle page=\"{page}\">\r\n    <a class=\"button is-info is-pulled-right\" href=\"#history\">\r\n      <Icon icon=\"long-arrow-left\" size=\"small\" />\r\n      <span>Back to All Histories</span>\r\n    </a>\r\n  </PageTitle> -->\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message}>\r\n\r\n\r\n  <Panel title=\"Patient symptoms\" has_toolbar={true} >\r\n    <div slot='toolbar'>\r\n      <ConfirmButton\r\n        text=\"Delete History\"\r\n        color=\"danger\"\r\n        icon=\"trash\"\r\n        icon_only=\"{false}\"\r\n        on:do=\"deleteHistory(event)\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"columns\">\r\n      <div class=\"column is-5\">\r\n        {#if data.patient}\r\n          <Message title=\"Records\" color='info'>\r\n            <p class=\"title is-5\">Patient Details</p>\r\n\r\n            <PatientDetails data={data.patient} />\r\n          </Message>\r\n        {/if}\r\n      </div>\r\n      <div class=\"column is-7\">\r\n        <Message title=\"Records\" color='info'>\r\n          {#each Object.entries(data) as [key, value], i}\r\n            {#if value && !omitted_field.includes(key)}\r\n            <p class=\"is-size-5\"><span class=\"has-text-weight-bold is-size-4\">{key}</span>: {value}</p> <br>\r\n            {/if}\r\n          {/each}\r\n        </Message>\r\n      </div>\r\n    </div>\r\n  </Panel>\r\n\r\n  </ViewScaffold>\r\n</div>\r\n\r\n<script>\r\n  import Model from '../../../models/histories';\r\n  import Remedies from '../../../models/remedies';\r\n\r\n  import {Icon, Notification, Panel, Message} from '@kws3/helpers';\r\n  import { SubmitButton, ConfirmButton } from '@kws3/buttons';\r\n\r\n  import Router from '../../../services/router';\r\n  import SearchResult from '../search/helpers/SearchResult.html';\r\n  import RemedyFound from '../search/helpers/RemedyFound.html';\r\n  import PatientDetails from '../helpers/PatientDetails.html';\r\n  \r\n  export default {\r\n    components: {\r\n      ViewScaffold: '../../helpers/ViewScaffold.html',\r\n      PageTitle: '../../helpers/PageTitle.html',\r\n      Notification, Message, SubmitButton, ConfirmButton,\r\n      Icon, Panel, SearchResult, RemedyFound, PatientDetails\r\n\r\n    },\r\n    data() {\r\n      return {\r\n        is_loading: false,\r\n        is_error: false,\r\n        error_message: '',\r\n        selected_symptom: '',\r\n        selected_symp: '',\r\n        selected_keyed_symp: '',\r\n        result_symptoms: '',\r\n        remedies: {},\r\n        data: {},\r\n        meta: {},\r\n        remedy_found: {},\r\n        omitted_field: [ 'id', 'name', 'created', 'modified', 'deleted', 'patient', 'treatments'],\r\n        tracker: {\r\n          saving: false,\r\n          saved: false,\r\n          error: false,\r\n        },\r\n        page: {\r\n          title: 'View Case History',\r\n          subtitle: 'Case History details',\r\n          icon: 'building-o',\r\n          icon_badge: 'pencil'\r\n        },\r\n      }\r\n    },\r\n    computed: {\r\n      entityId: ({ $nav }) => $nav && $nav.params[0],\r\n      filterFields: ({remedies, omitted_field}) => {\r\n        \r\n        let last = ['built', 'constitution', 'diathesis', 'miasm', 'temperament', 'temperature_and_weather',\r\n        'thermal_sensitivity', 'sensation', 'tendency_take_cold', 'desires', 'aversions', 'birth_history_milestones',\r\n        'tissues', 'stages_and_states', 'attacks_and_side', 'ailments_from', 'affections', 'clinical', 'modalities',\r\n        'mental_state_and_disorders', 'appearance_and_behavior', 'attention_and_concentration', 'expression',\r\n        'consciousness', 'mood_and_affect', 'memory', 'speech', 'thoughts_and_ideas', 'perception', 'intelligence',\r\n        'judgment', 'fear_and_live_alone', 'boring', 'peaceful', 'anger', 'hobby', 'habit', 'addiction', 'nutrition',\r\n        'anaemia', 'cyanosis', 'dehydration', 'jaundice', 'pulse', 'breathing', 'peculiar_rare_symptoms'\r\n        ];\r\n\r\n        let filtered = [];\r\n        if(remedies.length){\r\n          for(let [key, value] of Object.entries(remedies[0])) {\r\n            if( !last.includes(key) && !omitted_field.includes(key)){\r\n              filtered.push(key)\r\n            }\r\n          }\r\n          filtered.push(...last)\r\n          return filtered\r\n        }\r\n      },\r\n      loadSymptoms: ({remedies}) => {\r\n        let symptoms = {}\r\n        let _symp = []\r\n\r\n        for(let i in remedies){\r\n          Object.entries(remedies[i]).forEach(([key, value]) => {\r\n          _symp[key] = []\r\n          })\r\n          break;\r\n        }\r\n        for(let item in remedies){\r\n          let single = remedies[item];\r\n\r\n          Object.entries(single).forEach(([key, value]) => {\r\n            if(value){\r\n              if(typeof value == 'string'){\r\n                _symp[key].push(value.split(','))\r\n              }\r\n              symptoms[key] = (symptoms[key] ? symptoms[key] : '') + ', ' + value;\r\n            }\r\n          })\r\n        }\r\n        return _symp\r\n      },\r\n    },\r\n    oncreate() {\r\n      var { entityId } = this.get();\r\n\r\n      this.load();\r\n    },\r\n    methods: {\r\n      \r\n      load() {\r\n        var { entityId } = this.get();\r\n\r\n        this.set({\r\n          is_loading: true,\r\n          is_error: false\r\n        });\r\n\r\n        Model && Model.getOne(entityId)\r\n        .then((r) => {\r\n          console.log(r)\r\n          this.set({\r\n            is_loading: false,\r\n            meta: r._meta,\r\n            data: r.response\r\n          });\r\n\r\n        })\r\n        .catch((r) => {\r\n          var user_message = '';\r\n          if (typeof r != 'undefined' && typeof r.response != 'undefined' && typeof r.response.records != 'undefined') {\r\n            user_message = r.response.records.userMessage;\r\n          }\r\n          this.set({\r\n            'is_error': true,\r\n            'is_loading': false,\r\n            'error_message': user_message\r\n          });\r\n        });\r\n      },\r\n      loadRemedies(){\r\n        Remedies.getAll({limit:1000})\r\n        .then( (r) => {\r\n          this.set({ remedies: r.response })\r\n        })\r\n        .catch( (r) => {\r\n          console.log(r)\r\n        })\r\n      },\r\n      deleteHistory(comp){\r\n\r\n        comp && comp.doing();\r\n        \r\n        Model.delete(this.get().entityId)\r\n        .then( (r) => {\r\n          comp.done();\r\n          Router.navigate('history');\r\n        })\r\n        .catch( () => {\r\n          comp.error();\r\n        });\r\n          \r\n        \r\n      },\r\n      save() {\r\n        var {data, entityId, tracker} = this.get();\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        Model.save(entityId, data)\r\n        .then(r => {\r\n          this.set({\r\n            data: r.response,\r\n            tracker: {\r\n              saving: false,\r\n              saved: true,\r\n              error: false\r\n            }\r\n          });\r\n\r\n          setTimeout(() => {\r\n            tracker.saved = false;\r\n            this.set({tracker});\r\n          }, 1500);\r\n        })\r\n        .catch(r => {\r\n          console.log(r)\r\n          this.set({error_message: 'There was an error updating premise'});\r\n\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: false,\r\n              error: true\r\n            }\r\n          });\r\n\r\n          setTimeout(() => {\r\n            this.set({tracker: {error: false}});\r\n          }, 1500);\r\n        });\r\n      }\r\n    }\r\n  }\r\n</script>","<div class=\"page-content\">\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message}>\r\n\r\n    {#if tracker.error}\r\n    <Notification type=\"danger\"> {error_message} </Notification>\r\n    {/if}\r\n\r\n  {#if !has_searched}\r\n    <form on:submit=\"search(event)\">\r\n      <Panel title=\"Patient Symptoms\" has_toolbar={true} >\r\n\r\n        <div class=\"columns\">\r\n          <div class=\"column\">\r\n            <Message title=\"Records\" color='light'>\r\n              {#each Object.entries(data) as [key, value], i}\r\n                {#if value && !omitted_field.includes(key)}\r\n                <p><span class=\"has-text-weight-bold is-size-5\">{key}</span>: {value}</p> <br>\r\n                {/if}\r\n              {/each}\r\n            </Message>\r\n          </div>\r\n\r\n          <div class=\"column\">\r\n            <div class=\"field\">\r\n              <span class=\"select is-fullwidth\">\r\n                <select class=\"input\" bind:value=\"selected_section\" >\r\n                  <option value=\"\">Select Type</option>\r\n                  {#each Object.entries(data) as [key, value], i}\r\n                    {#if !omitted_field.includes(key)}\r\n                      <option value=\"{key}\">{key}</option>\r\n                    {/if}\r\n                  {/each}\r\n                </select>\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\" style=\"text-transform: capitalize;\">{selected_section}</label>\r\n                <textarea class=\"textarea\" placeholder=\"{selected_section}...\" bind:value=\"data[selected_section]\" style=\"height: 15rem;\"></textarea>\r\n              </p>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"column\">\r\n            <p class=\"title is-5\">Suggestions</p>\r\n\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\" style=\"text-transform: capitalize;\">{selected_section} Symptoms in the System</label>\r\n                  <SearchableSelect\r\n                    data=\"{searchable_withkey[selected_section]}\"\r\n                    placeholder=\"Choose...\"\r\n                    bind:_name=\"selected_keyed_symp\"\r\n                    searchKey=\"name\"\r\n                    searchValue=\"id\"\r\n                  />\r\n              </p>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\" style=\"text-transform: capitalize;\">All Symptoms in the System</label>\r\n                  <SearchableSelect\r\n                    data=\"{searchable_symp}\"\r\n                    placeholder=\"Choose...\"\r\n                    bind:_name=\"selected_all_symp\"\r\n                    searchKey=\"name\"\r\n                    searchValue=\"id\"\r\n                  />\r\n              </p>\r\n            </div>\r\n            <div class=\"field is-grouped is-pulled-right\">\r\n              <p class=\"control\">\r\n                <label class=\"label\">&nbsp;</label>\r\n                <button type=\"button\" on:click=\"save()\" class=\"button is-primary is-medium\" >\r\n                  <span class=\"icon\">\r\n                    <i class=\"fa fa-save\"></i>\r\n                  </span>\r\n                  <span>Save only</span>\r\n                </button>\r\n                </p>\r\n\r\n              <p class=\"control\">\r\n                <label class=\"label\">&nbsp;</label>\r\n                <SubmitButton bind:disabled classes=\"is-primary is-medium is-pulled-right\" icon=\"search\" icon_size=\"small\" text=\"Search\" bind:tracker />\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Panel>\r\n    </form>\r\n      <br>\r\n  {/if}\r\n\r\n  {#if has_searched}\r\n    <div class=\"columns\">\r\n      <div class=\"column\">\r\n        <RemedyFound\r\n          bind:data\r\n          bind:tracker\r\n          bind:remedy_found\r\n          {field_name}\r\n          {result_symptoms}\r\n          on:back=\"back()\"\r\n          on:showSymptoms\r\n          on:saveHistory=\"saveHistory()\"\r\n        />\r\n      </div>\r\n      <div class=\"column\">\r\n        <!-- <Treatment\r\n          bind:remedy_names\r\n          bind:data\r\n          bind:tracker\r\n          bind:remedy_found\r\n          {result_symptoms}\r\n          on:saveTreatment\r\n        /> -->\r\n      </div>\r\n    </div>\r\n    <br>\r\n\r\n  {/if}\r\n\r\n  {#if !has_searched}\r\n    <Sections\r\n      bind:data\r\n      bind:remedies\r\n      bind:filterFields\r\n      bind:selected_section\r\n      reset_disabled=\"true\"\r\n    />\r\n\r\n  {/if}\r\n\r\n\r\n  </ViewScaffold>\r\n</div>\r\n\r\n<script>\r\n  import Model from '../../../models/histories';\r\n  import Remedies from '../../../models/remedies';\r\n\r\n  import {Icon, Notification, Panel, Message} from '@kws3/helpers';\r\n  import { SubmitButton, ConfirmButton } from '@kws3/buttons';\r\n\r\n  import Router from '../../../services/router';\r\n  import SearchableSelect from '@kws3/searchable-select';\r\n  import SearchResult from '../search/helpers/SearchResult.html';\r\n  import RemedyFound from '../search/helpers/RemedyFound.html';\r\n  import Sections from '../search/helpers/Sections.html';\r\n  import _search from '../../../utils/search.js';\r\n\r\n  export default {\r\n    components: {\r\n      ViewScaffold: '../../helpers/ViewScaffold.html',\r\n      PageTitle: '../../helpers/PageTitle.html',\r\n      Notification, Message, SearchableSelect, SubmitButton, ConfirmButton,\r\n      Icon, Panel, SearchResult, RemedyFound, Sections\r\n\r\n    },\r\n    helpers: {\r\n      _search\r\n    },\r\n    data() {\r\n      return {\r\n        is_loading: false,\r\n        is_error: false,\r\n        error_message: '',\r\n        selected_section: '',\r\n        selected_all_symp: '',\r\n        selected_keyed_symp: '',\r\n        result_symptoms: '',\r\n        remedies: {},\r\n        data: {},\r\n        meta: {},\r\n        remedy_found: {},\r\n        omitted_field: [ 'id', 'name', 'created', 'modified', 'deleted', 'patient', 'treatments'],\r\n        tracker: {\r\n          saving: false,\r\n          saved: false,\r\n          error: false,\r\n        },\r\n        page: {\r\n          title: 'View Case History',\r\n          subtitle: 'Case History details',\r\n          icon: 'building-o',\r\n          icon_badge: 'pencil'\r\n        },\r\n      }\r\n    },\r\n    computed: {\r\n      entityId: ({ $nav }) => $nav && $nav.params[0],\r\n      has_searched: ({remedy_found}) => Object.keys(remedy_found).length,\r\n      filterFields: ({remedies, omitted_field}) => {\r\n\r\n        let last = ['built', 'constitution', 'diathesis', 'miasm', 'temperament', 'temperature_and_weather',\r\n        'thermal_sensitivity', 'sensation', 'tendency_take_cold', 'desires', 'aversions', 'birth_history_milestones',\r\n        'tissues', 'stages_and_states', 'attacks_and_side', 'ailments_from', 'affections', 'clinical', 'modalities',\r\n        'mental_state_and_disorders', 'appearance_and_behavior', 'attention_and_concentration', 'expression',\r\n        'consciousness', 'mood_and_affect', 'memory', 'speech', 'thoughts_and_ideas', 'perception', 'intelligence',\r\n        'judgment', 'fear_and_live_alone', 'boring', 'peaceful', 'anger', 'hobby', 'habit', 'addiction', 'nutrition',\r\n        'anaemia', 'cyanosis', 'dehydration', 'jaundice', 'pulse', 'breathing', 'peculiar_rare_symptoms'\r\n        ];\r\n\r\n        let filtered = [];\r\n        if(remedies.length){\r\n          for(let [key, value] of Object.entries(remedies[0])) {\r\n            if( !last.includes(key) && !omitted_field.includes(key)){\r\n              filtered.push(key)\r\n            }\r\n          }\r\n          filtered.push(...last)\r\n          return filtered\r\n        }\r\n      },\r\n      loadSymptoms: ({remedies}) => {\r\n        let symptoms = {}\r\n        let _symp = []\r\n\r\n        for(let i in remedies){\r\n          Object.entries(remedies[i]).forEach(([key, value]) => {\r\n          _symp[key] = []\r\n          })\r\n          break;\r\n        }\r\n        for(let item in remedies){\r\n          let single = remedies[item];\r\n\r\n          Object.entries(single).forEach(([key, value]) => {\r\n            if(value){\r\n              if(typeof value == 'string'){\r\n                _symp[key].push(value.split(','))\r\n              }\r\n              symptoms[key] = (symptoms[key] ? symptoms[key] : '') + ', ' + value;\r\n            }\r\n          })\r\n        }\r\n        return _symp\r\n      },\r\n      searchable_withkey({loadSymptoms}){\r\n        let final = [], total = 0;\r\n\r\n        Object.entries(loadSymptoms).forEach(([key, value]) => {\r\n          let one = loadSymptoms[key];\r\n            final[key] = [];\r\n            for(let i in one){\r\n              if(Array.isArray(one[i])){\r\n                for(let ind in one[i]){\r\n                  final[key].push({ id: total++, name: one[i][ind] })\r\n                }\r\n              }\r\n            }\r\n          })\r\n        return final\r\n      },\r\n      searchable_symp({loadSymptoms, omitted_field}){\r\n        let final = [], total = 0;\r\n        for(let item in loadSymptoms){\r\n          if(!omitted_field.includes(item)){\r\n            let one = loadSymptoms[item];\r\n\r\n              for(let i in one){\r\n                if(Array.isArray(one[i])){\r\n                  for(let ind in one[i]){\r\n                    let value = one[i][ind] + ' -> ' + item;\r\n                    final.push({ id: total++, name: value.trim() })\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        return final\r\n      }\r\n    },\r\n    oncreate() {\r\n      var { entityId } = this.get();\r\n\r\n      this.on('state', ({ changed, current, previous }) => {\r\n        let {data, selected_section, selected_all_symp} = this.get()\r\n\r\n        if(current.selected_keyed_symp != previous.selected_keyed_symp){\r\n          // got it selected symptom\r\n          data[selected_section] =  data[selected_section] ? data[selected_section]  + ', ' + current.selected_keyed_symp : current.selected_keyed_symp;\r\n          this.set({data})\r\n          console.log(data)\r\n        }\r\n\r\n        if(current.selected_all_symp != previous.selected_all_symp){\r\n          let section = selected_all_symp.split(' -> ');\r\n          let field = section[1], value = section[0];\r\n\r\n          data[field] = data[field] ? data[field]  + ', ' + value : value;\r\n          this.set({data, selected_section: field, selected_keyed_symp: value})\r\n        }\r\n\r\n        if (changed['$nav']) {\r\n          var { $nav } = current;\r\n          if ($nav.activeView == '_COMPONENT_') {\r\n            this.load();\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n      this.load();\r\n\r\n      this.loadRemedies();\r\n    },\r\n    methods: {\r\n      load() {\r\n        var { entityId } = this.get();\r\n\r\n        this.set({\r\n          is_loading: true,\r\n          is_error: false\r\n        });\r\n\r\n        Model && Model.getOne(entityId)\r\n        .then((r) => {\r\n          this.set({\r\n            is_loading: false,\r\n            meta: r._meta,\r\n            data: r.response\r\n          });\r\n\r\n        })\r\n        .catch((r) => {\r\n          var user_message = '';\r\n          if (typeof r != 'undefined' && typeof r.response != 'undefined' && typeof r.response.records != 'undefined') {\r\n            user_message = r.response.records.userMessage;\r\n          }\r\n          this.set({\r\n            'is_error': true,\r\n            'is_loading': false,\r\n            'error_message': user_message\r\n          });\r\n        });\r\n      },\r\n      loadRemedies(){\r\n        Remedies.getAll({limit:1000})\r\n        .then( (r) => {\r\n          this.set({ remedies: r.response })\r\n        })\r\n        .catch( (r) => {\r\n          console.log(r)\r\n        })\r\n      },\r\n      save() {\r\n        var {data, entityId, tracker} = this.get();\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        Model.save(entityId, data)\r\n        .then(r => {\r\n          this.set({\r\n            data: r.response,\r\n            tracker: {\r\n              saving: false,\r\n              saved: true,\r\n              error: false\r\n            }\r\n          });\r\n\r\n          setTimeout(() => {\r\n            tracker.saved = false;\r\n            this.set({tracker});\r\n          }, 1500);\r\n        })\r\n        .catch(r => {\r\n          console.log(r)\r\n          this.set({error_message: 'There was an error updating history'});\r\n\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: false,\r\n              error: true\r\n            }\r\n          });\r\n\r\n          setTimeout(() => {\r\n            this.set({tracker: {error: false}});\r\n          }, 1500);\r\n        });\r\n      },\r\n      back(){\r\n        this.set({ remedy_found: {} })\r\n        this.set({ result_symptoms: {} })\r\n\r\n      },\r\n      search(e) {\r\n        e.preventDefault();\r\n        var { data, valid, remedies }  = this.get();\r\n        let matched_remedies = {};\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        matched_remedies = _search(data, remedies);\r\n        this.set({ remedy_found: matched_remedies})\r\n\r\n        setTimeout( () => {\r\n          this.set({ tracker: { saved: false } });\r\n          // Router.navigate('search');\r\n        }, 1000);\r\n\r\n      },\r\n    }\r\n  }\r\n</script>","<div class=\"page-content\">\r\n  <PageTitle page=\"{page}\">\r\n    <a class=\"button is-info is-pulled-right\" href=\"#history\">\r\n      <Icon icon=\"long-arrow-left\" size=\"small\" />\r\n      <span>Back to All Histories</span>\r\n    </a>\r\n  </PageTitle>\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message} class=\"has-fullpage-tabs has-multilevel-tabs\">\r\n\r\n    <LabsTabs {tabs} bind:active_tab />\r\n\r\n    <!-- <SlidingPaneSet style=\"height:{pane_height}px\">\r\n      <SlidingPane active={active_tab == 'static_view'} track_height on:heightChange> -->\r\n        <!-- <ViewHistoryStatic bind:is_error bind:error_message /> -->\r\n        {#if active_tab == 'static_view'}\r\n          <ViewHistoryStatic bind:is_error bind:error_message />\r\n       \r\n        {/if}\r\n      <!-- </SlidingPane>\r\n      \r\n      <SlidingPane active={false} track_height on:heightChange> -->\r\n        <!-- <ViewHistoryEdit bind:is_error bind:error_message /> -->\r\n        {#if active_tab == 'edit_view'}\r\n          <ViewHistoryEdit bind:is_error bind:error_message />\r\n       \r\n        {/if}\r\n      <!-- </SlidingPane>\r\n    </SlidingPaneSet> -->\r\n\r\n  </ViewScaffold>\r\n</div>\r\n\r\n<script>\r\n  import {Icon, Notification, Panel, Message} from '@kws3/helpers';\r\n  import { SubmitButton, ConfirmButton } from '@kws3/buttons';\r\n  import {SlidingPaneSet, SlidingPane} from '@kws3/sliding-panes'; \r\n  import LabsTabs from '../helpers/Tabs.html';\r\n  import ViewHistoryStatic from './ViewHistoryStatic.html';\r\n  import ViewHistoryEdit from './ViewHistoryEdit.html';\r\n  \r\n  export default {\r\n    components: {\r\n      ViewScaffold: '../../helpers/ViewScaffold.html',\r\n      PageTitle: '../../helpers/PageTitle.html',\r\n      Notification, Message, SubmitButton, ConfirmButton,\r\n      Icon, Panel, LabsTabs,\r\n      ViewHistoryStatic, ViewHistoryEdit,\r\n      SlidingPaneSet, SlidingPane,\r\n    },\r\n    data() {\r\n      return {\r\n        is_loading: false,\r\n        is_error: false,\r\n        error_message: '',\r\n        pane_height: 500,\r\n        data: {},\r\n        meta: {},\r\n        tracker: {\r\n          saving: false,\r\n          saved: false,\r\n          error: false,\r\n        },\r\n        page: {\r\n          title: 'View Case History',\r\n          subtitle: 'Case History details',\r\n          icon: 'building-o',\r\n          icon_badge: 'pencil'\r\n        },\r\n        active_tab: 'static_view',\r\n        tabs: [\r\n          {icon: 'info-circle', name: 'static_view', title: 'Static'},\r\n          {icon: 'pencil', name: 'edit_view', title: 'Edit Case History'},\r\n        ],\r\n      }\r\n    },\r\n    computed: {\r\n      entityId: ({ $nav }) => $nav && $nav.params[0],\r\n    },\r\n    oncreate() {\r\n      this.on('heightChange', ({height}) => {\r\n        this.set({pane_height: height})\r\n      });\r\n      \r\n      var { entityId } = this.get();\r\n\r\n      this.on('state', ({ changed, current, previous }) => {\r\n        console.log(current)\r\n      });\r\n\r\n    },\r\n    methods: {\r\n    }\r\n  }\r\n</script>"],"names":["$nav","params","remedies","omitted_field","last","filtered","length","key","value","Object","entries","includes","push","_symp","i","forEach","item","single","split","is_loading","is_error","error_message","selected_symptom","selected_symp","selected_keyed_symp","result_symptoms","data","meta","remedy_found","tracker","saving","saved","error","page","title","subtitle","icon","icon_badge","[object Object]","entityId","this","get","set","Model","getOne","then","r","console","log","_meta","response","catch","user_message","records","userMessage","Remedies","getAll","limit","comp","doing","delete","done","Router","navigate","save","setTimeout","load","deleteHistory","event","patient","keys","loadSymptoms","final","total","one","Array","isArray","ind","id","name","trim","selected_section","selected_all_symp","e","preventDefault","valid","matched_remedies","_search","on","changed","current","previous","section","field","activeView","loadRemedies","has_searched","searchable_withkey","searchable_symp","disabled","search","field_name","back","saveHistory","filterFields","pane_height","active_tab","tabs","height"],"mappings":"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"}