{"version":3,"file":"chunk-5811b7a5.js","sources":["../../../node_modules/grapnel/src/grapnel.js","../../../src/services/access.js","../../../src/services/router.js"],"sourcesContent":["/****\n * Grapnel\n * https://github.com/baseprime/grapnel\n *\n * @author Greg Sabia Tucker <greg@narrowlabs.com>\n * @link http://basepri.me\n * @version 0.6.4\n *\n * Released under MIT License. See LICENSE.txt or http://opensource.org/licenses/MIT\n*/\n\n!(function(root) {\n\n    function Grapnel(opts) {\n        \"use strict\";\n\n        var self = this; // Scope reference\n        this.events = {}; // Event Listeners\n        this.state = null; // Router state object\n        this.options = opts || {}; // Options\n        this.options.env = this.options.env || (!!(Object.keys(root).length === 0 && process && process.browser !== true) ? 'server' : 'client');\n        this.options.mode = this.options.mode || (!!(this.options.env !== 'server' && this.options.pushState && root.history && root.history.pushState) ? 'pushState' : 'hashchange');\n        this.version = '0.6.4'; // Version\n\n        if ('function' === typeof root.addEventListener) {\n            root.addEventListener('hashchange', function() {\n                self.trigger('hashchange');\n            });\n\n            root.addEventListener('popstate', function(e) {\n                // Make sure popstate doesn't run on init -- this is a common issue with Safari and old versions of Chrome\n                if (self.state && self.state.previousState === null) return false;\n\n                self.trigger('navigate');\n            });\n        }\n\n        return this;\n    };\n    /**\n     * Create a RegExp Route from a string\n     * This is the heart of the router and I've made it as small as possible!\n     *\n     * @param {String} Path of route\n     * @param {Array} Array of keys to fill\n     * @param {Bool} Case sensitive comparison\n     * @param {Bool} Strict mode\n     */\n    Grapnel.regexRoute = function(path, keys, sensitive, strict) {\n        if (path instanceof RegExp) return path;\n        if (path instanceof Array) path = '(' + path.join('|') + ')';\n        // Build route RegExp\n        path = path.concat(strict ? '' : '/?')\n            .replace(/\\/\\(/g, '(?:/')\n            .replace(/\\+/g, '__plus__')\n            .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?/g, function(_, slash, format, key, capture, optional) {\n                keys.push({\n                    name: key,\n                    optional: !!optional\n                });\n                slash = slash || '';\n\n                return '' + (optional ? '' : slash) + '(?:' + (optional ? slash : '') + (format || '') + (capture || (format && '([^/.]+?)' || '([^/]+?)')) + ')' + (optional || '');\n            })\n            .replace(/([\\/.])/g, '\\\\$1')\n            .replace(/__plus__/g, '(.+)')\n            .replace(/\\*/g, '(.*)');\n\n        return new RegExp('^' + path + '$', sensitive ? '' : 'i');\n    };\n    /**\n     * ForEach workaround utility\n     *\n     * @param {Array} to iterate\n     * @param {Function} callback\n     */\n    Grapnel._forEach = function(a, callback) {\n        if (typeof Array.prototype.forEach === 'function') return Array.prototype.forEach.call(a, callback);\n        // Replicate forEach()\n        return function(c, next) {\n            for (var i = 0, n = this.length; i < n; ++i) {\n                c.call(next, this[i], i, this);\n            }\n        }.call(a, callback);\n    };\n    /**\n     * Add an route and handler\n     *\n     * @param {String|RegExp} route name\n     * @return {self} Router\n     */\n    Grapnel.prototype.get = Grapnel.prototype.add = function(route) {\n        var self = this,\n            middleware = Array.prototype.slice.call(arguments, 1, -1),\n            handler = Array.prototype.slice.call(arguments, -1)[0],\n            request = new Request(route);\n\n        var invoke = function RouteHandler() {\n            // Build request parameters\n            var req = request.parse(self.path());\n            // Check if matches are found\n            if (req.match) {\n                // Match found\n                var extra = {\n                    route: route,\n                    params: req.params,\n                    req: req,\n                    regex: req.match\n                };\n                // Create call stack -- add middleware first, then handler\n                var stack = new CallStack(self, extra).enqueue(middleware.concat(handler));\n                // Trigger main event\n                self.trigger('match', stack, req);\n                // Continue?\n                if (!stack.runCallback) return self;\n                // Previous state becomes current state\n                stack.previousState = self.state;\n                // Save new state\n                self.state = stack;\n                // Prevent this handler from being called if parent handler in stack has instructed not to propagate any more events\n                if (stack.parent() && stack.parent().propagateEvent === false) {\n                    stack.propagateEvent = false;\n                    return self;\n                }\n                // Call handler\n                stack.callback();\n            }\n            // Returns self\n            return self;\n        };\n        // Event name\n        var eventName = (self.options.mode !== 'pushState' && self.options.env !== 'server') ? 'hashchange' : 'navigate';\n        // Invoke when route is defined, and once again when app navigates\n        return invoke().on(eventName, invoke);\n    };\n    /**\n     * Fire an event listener\n     *\n     * @param {String} event name\n     * @param {Mixed} [attributes] Parameters that will be applied to event handler\n     * @return {self} Router\n     */\n    Grapnel.prototype.trigger = function(event) {\n        var self = this,\n            params = Array.prototype.slice.call(arguments, 1);\n        // Call matching events\n        if (this.events[event]) {\n            Grapnel._forEach(this.events[event], function(fn) {\n                fn.apply(self, params);\n            });\n        }\n\n        return this;\n    };\n    /**\n     * Add an event listener\n     *\n     * @param {String} event name (multiple events can be called when separated by a space \" \")\n     * @param {Function} callback\n     * @return {self} Router\n     */\n    Grapnel.prototype.on = Grapnel.prototype.bind = function(event, handler) {\n        var self = this,\n            events = event.split(' ');\n\n        Grapnel._forEach(events, function(event) {\n            if (self.events[event]) {\n                self.events[event].push(handler);\n            } else {\n                self.events[event] = [handler];\n            }\n        });\n\n        return this;\n    };\n    /**\n     * Allow event to be called only once\n     *\n     * @param {String} event name(s)\n     * @param {Function} callback\n     * @return {self} Router\n     */\n    Grapnel.prototype.once = function(event, handler) {\n        var ran = false;\n\n        return this.on(event, function() {\n            if (ran) return false;\n            ran = true;\n            handler.apply(this, arguments);\n            handler = null;\n            return true;\n        });\n    };\n    /**\n     * @param {String} Route context (without trailing slash)\n     * @param {[Function]} Middleware (optional)\n     * @return {Function} Adds route to context\n     */\n    Grapnel.prototype.context = function(context) {\n        var self = this,\n            middleware = Array.prototype.slice.call(arguments, 1);\n\n        return function() {\n            var value = arguments[0],\n                submiddleware = (arguments.length > 2) ? Array.prototype.slice.call(arguments, 1, -1) : [],\n                handler = Array.prototype.slice.call(arguments, -1)[0],\n                prefix = (context.slice(-1) !== '/' && value !== '/' && value !== '') ? context + '/' : context,\n                path = (value.substr(0, 1) !== '/') ? value : value.substr(1),\n                pattern = prefix + path;\n\n            return self.add.apply(self, [pattern].concat(middleware).concat(submiddleware).concat([handler]));\n        }\n    };\n    /**\n     * Navigate through history API\n     *\n     * @param {String} Pathname\n     * @return {self} Router\n     */\n    Grapnel.prototype.navigate = function(path) {\n        return this.path(path).trigger('navigate');\n    };\n\n    Grapnel.prototype.path = function(pathname) {\n        var self = this,\n            frag;\n\n        if ('string' === typeof pathname) {\n            // Set path\n            if (self.options.mode === 'pushState') {\n                frag = (self.options.root) ? (self.options.root + pathname) : pathname;\n                root.history.pushState({}, null, frag);\n            } else if (root.location) {\n                root.location.hash = (self.options.hashBang ? '!' : '') + pathname;\n            } else {\n                root._pathname = pathname || '';\n            }\n\n            return this;\n        } else if ('undefined' === typeof pathname) {\n            // Get path\n            if (self.options.mode === 'pushState') {\n                frag = root.location.pathname.replace(self.options.root, '');\n            } else if (self.options.mode !== 'pushState' && root.location) {\n                frag = (root.location.hash) ? root.location.hash.split((self.options.hashBang ? '#!' : '#'))[1] : '';\n            } else {\n                frag = root._pathname || '';\n            }\n\n            return frag;\n        } else if (pathname === false) {\n            // Clear path\n            if (self.options.mode === 'pushState') {\n                root.history.pushState({}, null, self.options.root || '/');\n            } else if (root.location) {\n                root.location.hash = (self.options.hashBang) ? '!' : '';\n            }\n\n            return self;\n        }\n    };\n    /**\n     * Create routes based on an object\n     *\n     * @param {Object} [Options, Routes]\n     * @param {Object Routes}\n     * @return {self} Router\n     */\n    Grapnel.listen = function() {\n        var opts, routes;\n        if (arguments[0] && arguments[1]) {\n            opts = arguments[0];\n            routes = arguments[1];\n        } else {\n            routes = arguments[0];\n        }\n        // Return a new Grapnel instance\n        return (function() {\n            // TODO: Accept multi-level routes\n            for (var key in routes) {\n                this.add.call(this, key, routes[key]);\n            }\n\n            return this;\n        }).call(new Grapnel(opts || {}));\n    };\n    /**\n     * Create a call stack that can be enqueued by handlers and middleware\n     *\n     * @param {Object} Router\n     * @param {Object} Extend\n     * @return {self} CallStack\n     */\n    function CallStack(router, extendObj) {\n        this.stack = CallStack.global.slice(0);\n        this.router = router;\n        this.runCallback = true;\n        this.callbackRan = false;\n        this.propagateEvent = true;\n        this.value = router.path();\n\n        for (var key in extendObj) {\n            this[key] = extendObj[key];\n        }\n\n        return this;\n    };\n    /**\n     * Build request parameters and allow them to be checked against a string (usually the current path)\n     *\n     * @param {String} Route\n     * @return {self} Request \n     */\n    function Request(route) {\n        this.route = route;\n        this.keys = [];\n        this.regex = Grapnel.regexRoute(route, this.keys);\n    };\n    // This allows global middleware\n    CallStack.global = [];\n    /**\n     * Prevent a callback from being called\n     *\n     * @return {self} CallStack \n     */\n    CallStack.prototype.preventDefault = function() {\n        this.runCallback = false;\n    };\n    /**\n     * Prevent any future callbacks from being called\n     *\n     * @return {self} CallStack \n     */\n    CallStack.prototype.stopPropagation = function() {\n        this.propagateEvent = false;\n    };\n    /**\n     * Get parent state\n     *\n     * @return {Object} Previous state \n     */\n    CallStack.prototype.parent = function() {\n        var hasParentEvents = !!(this.previousState && this.previousState.value && this.previousState.value == this.value);\n        return (hasParentEvents) ? this.previousState : false;\n    };\n    /**\n     * Run a callback (calls to next)\n     *\n     * @return {self} CallStack \n     */\n    CallStack.prototype.callback = function() {\n        this.callbackRan = true;\n        this.timeStamp = Date.now();\n        this.next();\n    };\n    /**\n     * Add handler or middleware to the stack\n     *\n     * @param {Function|Array} Handler or a array of handlers\n     * @param {Int} Index to start inserting\n     * @return {self} CallStack \n     */\n    CallStack.prototype.enqueue = function(handler, atIndex) {\n        var handlers = (!Array.isArray(handler)) ? [handler] : ((atIndex < handler.length) ? handler.reverse() : handler);\n\n        while (handlers.length) {\n            this.stack.splice(atIndex || this.stack.length + 1, 0, handlers.shift());\n        }\n\n        return this;\n    };\n    /**\n     * Call to next item in stack -- this adds the `req`, `event`, and `next()` arguments to all middleware\n     *\n     * @return {self} CallStack \n     */\n    CallStack.prototype.next = function() {\n        var self = this;\n\n        return this.stack.shift().call(this.router, this.req, this, function next() {\n            self.next.call(self);\n        });\n    };\n    /**\n     * Match a path string -- returns a request object if there is a match -- returns false otherwise\n     *\n     * @return {Object} req\n     */\n    Request.prototype.parse = function(path) {\n        var match = path.match(this.regex),\n            self = this;\n\n        var req = {\n            params: {},\n            keys: this.keys,\n            matches: (match || []).slice(1),\n            match: match\n        };\n        // Build parameters\n        Grapnel._forEach(req.matches, function(value, i) {\n            var key = (self.keys[i] && self.keys[i].name) ? self.keys[i].name : i;\n            // Parameter key will be its key or the iteration index. This is useful if a wildcard (*) is matched\n            req.params[key] = (value) ? decodeURIComponent(value) : undefined;\n        });\n\n        return req;\n    };\n\n    // Append utility constructors to Grapnel\n    Grapnel.CallStack = CallStack;\n    Grapnel.Request = Request;\n\n    if ('function' === typeof root.define && !root.define.amd.grapnel) {\n        root.define(function(require, exports, module) {\n            root.define.amd.grapnel = true;\n            return Grapnel;\n        });\n    } else if ('object' === typeof module && 'object' === typeof module.exports) {\n        module.exports = exports = Grapnel;\n    } else {\n        root.Grapnel = Grapnel;\n    }\n\n}).call({}, ('object' === typeof window) ? window : this);\n","import cloneObject from '../utils/cloneObject';\r\n\r\nvar Access = function(){\r\n  var self = this;\r\n\r\n  //all roles in the system\r\n  var ROLE = {\r\n    CONTEXT_ADMIN             : 'SA',\r\n    CONTEXT_USER              : 'SU',\r\n  };\r\n\r\n  //roles allowed to login to this system\r\n  var ALLOWED = [\r\n    ROLE.CONTEXT_ADMIN, ROLE.CONTEXT_USER\r\n  ];\r\n\r\n  // sections on main Navigation\r\n  var sections = {\r\n    'Dashboard'           : {icon:'dashboard', url:''},\r\n    'Users'               : {icon:'vcard-o', url:'users'},\r\n    'Profile'             : {visible: false },\r\n    'Settings'            : {icon: 'cogs', url: 'settings'},    \r\n    'Remedies'            : {icon: 'medkit', url: 'remedies'},\r\n    'Patients'            : {icon: 'users', url: 'patients'},\r\n    'Search'              : {icon: 'search', url: 'search'},\r\n    'History'             : {icon: 'th', url: 'history'},\r\n    'Prescriptions'        : {icon: 'copy', url: 'prescriptions'},\r\n  },\r\n  allowedMap = {},\r\n  allowedSections  = {};\r\n\r\n  allowedMap[ROLE.CONTEXT_ADMIN] = [\r\n    'Dashboard', 'Profile', 'Remedies', 'Patients', 'History', 'Search', 'Prescriptions', 'Users', 'Settings'\r\n  ];\r\n  allowedMap[ROLE.CONTEXT_USER] = [\r\n    'Dashboard', 'Profile', 'Remedies', 'Patients', 'History', 'Search', 'Prescriptions', 'Users', 'Settings'\r\n  ];\r\n\r\n\r\n  //map allowedMap to allowedSections\r\n  for(var k in allowedMap){\r\n    allowedSections[k] = {};\r\n    for (var i = 0; i < allowedMap[k].length; i++){\r\n      allowedSections[k][allowedMap[k][i]] = sections[allowedMap[k][i]];\r\n    }\r\n  }\r\n\r\n\r\n  self.isAllowed = function(role){\r\n    return ALLOWED.indexOf(role) !== -1;\r\n  }\r\n\r\n  self.sectionAllowed = function(section, user){\r\n    var {role} = user\r\n    return typeof allowedSections[role] != 'undefined' && typeof allowedSections[role][section] != 'undefined';\r\n  }\r\n\r\n  self.mainSections = function(role){\r\n    return allowedSections[role] || {};\r\n  }\r\n\r\n  self.roles = ROLE;\r\n\r\n};\r\n\r\nexport default new Access;\r\n","import _grapnel from 'grapnel';\r\nimport Access from './access';\r\n\r\nvar Grapnel = _grapnel || window.Grapnel;\r\n\r\nvar _router = new Grapnel();\r\n\r\nvar Router = function () {\r\n    var self = this,\r\n        App = null,\r\n        Routes = {},\r\n        defaultRoute = null;\r\n\r\n    self.router = _router;\r\n\r\n    self.init = function (app, routes, def_route) {\r\n        App = app;\r\n        Routes = routes;\r\n        defaultRoute = def_route || 'home';\r\n        _init();\r\n    }\r\n\r\n    self.goHome = function () {\r\n        self.router.navigate('');\r\n    }\r\n\r\n    self.navigate = function (p) {\r\n        self.router.navigate(p);\r\n    }\r\n\r\n    var capitalize = function (m) {\r\n        return m.charAt(0).toUpperCase() + m.slice(1);\r\n    }\r\n\r\n    var middleWares = {\r\n        'accessCheck': function (req, ev, next) {\r\n            var m = (req.match[0].split('/'))[0],\r\n                section = capitalize(m);\r\n\r\n            if (Access.sectionAllowed(section, App.store.get().user)) {\r\n                next();\r\n            } else {\r\n                App.fire('routeChange', {\r\n                    view: '404',\r\n                    params: {}\r\n                });\r\n                ev.stopPropagation();\r\n            }\r\n        }\r\n    };\r\n\r\n    function applyRoute(context, pattern, view, childOf) {\r\n\r\n        context.call(self.router, pattern, middleWares['accessCheck'], function (req, ev) {\r\n            var m = (req.match[0].split('/'))[0],\r\n                section = childOf ? capitalize(childOf) : capitalize(m);\r\n\r\n            App.fire('routeChange', {\r\n                view: view,\r\n                section: section,\r\n                params: req.params\r\n            });\r\n\r\n            ev.stopPropagation();\r\n\r\n        });\r\n    }\r\n\r\n    function _init() {\r\n\r\n        var contexts = [],\r\n            i = 0;\r\n        for (var base in Routes) {\r\n            contexts[i] = self.router.context(base);\r\n            for (var p in Routes[base]) {\r\n                var pattern = Routes[base][p]['pattern'],\r\n                    view = Routes[base][p]['view'],\r\n                    type = typeof Routes[base][p]['type'] != 'undefined' ? Routes[base][p]['type'] : '',\r\n                    context = contexts[i],\r\n                    childOf = typeof Routes[base][p]['childOf'] != 'undefined' ? Routes[base][p]['childOf'] : null;\r\n\r\n                if (type == 'regex') {\r\n                    pattern = new RegExp('^' + base + pattern, 'i');\r\n                    context = self.router.get;\r\n                }\r\n\r\n                applyRoute(context, pattern, view, childOf);\r\n\r\n            }\r\n            i++;\r\n        }\r\n\r\n        //404 handler\r\n        self.router.get('*', function (req, ev) {\r\n            if (req.match[0] == '') {\r\n                self.router.navigate(defaultRoute);\r\n                return;\r\n            }\r\n            if (!ev.parent()) {\r\n                App.fire('routeChange', {\r\n                    view: '404',\r\n                    params: {}\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport default new Router;"],"names":["root","Grapnel","opts","self","this","events","state","options","env","Object","keys","length","process","browser","mode","pushState","history","version","addEventListener","trigger","e","previousState","CallStack","router","extendObj","key","stack","global","slice","runCallback","callbackRan","propagateEvent","value","path","Request","route","regex","regexRoute","sensitive","strict","RegExp","Array","join","concat","replace","_","slash","format","capture","optional","push","name","_forEach","a","callback","prototype","forEach","call","c","next","i","n","get","add","middleware","arguments","handler","request","invoke","req","parse","match","extra","params","enqueue","parent","eventName","on","event","fn","apply","bind","split","once","ran","context","submiddleware","pattern","substr","navigate","pathname","frag","location","hash","hashBang","_pathname","listen","routes","preventDefault","stopPropagation","timeStamp","Date","now","atIndex","handlers","isArray","reverse","splice","shift","matches","decodeURIComponent","undefined","define","amd","grapnel","module","require","exports","window","Access","ROLE","CONTEXT_ADMIN","CONTEXT_USER","ALLOWED","sections","Dashboard","icon","url","Users","Profile","visible","Settings","Remedies","Patients","Search","History","Prescriptions","allowedMap","allowedSections","k","isAllowed","role","indexOf","sectionAllowed","section","user","mainSections","roles","_grapnel","_router","Router","App","Routes","defaultRoute","init","app","def_route","contexts","base","p","view","type","childOf","applyRoute","ev","fire","_init","goHome","capitalize","m","charAt","toUpperCase","middleWares","accessCheck","store"],"mappings":"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"}