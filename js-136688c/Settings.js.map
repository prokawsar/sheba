{"version":3,"file":"Settings.js","sources":["../../../src/models/settings.js","../../../src/components/views/Settings.html"],"sourcesContent":["import baseModel from './basemodel.js';\r\n\r\nexport default new class extends baseModel {\r\n  constructor() {\r\n    super();\r\n    this.apiEndpoint = '/settings';\r\n  }\r\n};","<div class=\"page-content\">\r\n  <PageTitle page=\"{page}\">\r\n    <PageTabBar>\r\n      <li class=\"is-active\" >\r\n        <a href=\"#settings\">\r\n          <Icon size=\"small\" icon=\"cogs\" />\r\n          <span>Settings</span>\r\n        </a>\r\n      </li>\r\n    </PageTabBar>\r\n  </PageTitle>\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message}>\r\n\r\n      {#if tracker.error}\r\n        <Notification type=\"danger\">\r\n            There was an error updating settings\r\n        </Notification>\r\n      {/if}\r\n\r\n    <form on:submit=\"save(event)\">\r\n      <Panel title=\"Update Settings\">\r\n        {#if !data.length}\r\n        <div class=\"message is-primary\">\r\n          <div class=\"message-body\">\r\n            No settings to modify.\r\n          </div>\r\n        </div>\r\n        {:else}\r\n        <div class=\"columns is-multiline\">\r\n\r\n          {#each displayed_settings as setting}\r\n            <div class=\"column is-6\">\r\n              <div class=\"field\">\r\n                <label class=\"label\">{setting.display_name}</label>\r\n                <p class=\"control\">\r\n                  <input class=\"input\" type=\"text\" bind:value=\"setting.value\" />\r\n                </p>\r\n                <p class=\"help\">{setting.description}</p>\r\n              </div>\r\n            </div>\r\n          {/each}\r\n\r\n\r\n          <div class=\"column\">\r\n            <div class=\"field\">\r\n              <label class=\"label\">&nbsp;</label>\r\n              <p class=\"control\">\r\n                <SubmitButton icon_size=\"small\" classes=\"is-primary is-pulled-right\" bind:tracker />\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        {/if}\r\n      </Panel>\r\n    </form>\r\n  </ViewScaffold>\r\n</div>\r\n\r\n<script>\r\nimport Model from '../../models/settings';\r\nimport { Message, Notification, Panel, Icon } from '@kws3/helpers';\r\nimport { SubmitButton } from '@kws3/buttons';\r\nimport PageTabBar from '../helpers/PageTabBar.html';\r\n\r\nexport default {\r\n  components:{\r\n    ViewScaffold: '../helpers/ViewScaffold.html',\r\n    PageTitle: '../helpers/PageTitle.html',\r\n    SubmitButton,\r\n    Notification,\r\n    Panel,\r\n    Icon,\r\n    PageTabBar,\r\n    Message\r\n  },\r\n  data:function(){\r\n    return {\r\n      is_loading: true,\r\n      is_error: false,\r\n      error_message: '',\r\n      data:[],\r\n      page:{\r\n        title: 'Settings',\r\n        icon: 'cog',\r\n        subtitle: 'Modify application and user specific settings'\r\n      },\r\n      tracker:{\r\n        saving:false,\r\n        saved:false,\r\n        error:false\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n\r\n  },\r\n  oncreate(){\r\n    var self = this;\r\n    self.model = Model;\r\n    self.load();\r\n  },\r\n  methods:{\r\n    load(){\r\n      var self = this;\r\n\r\n      self.set({\r\n        is_loading: true,\r\n        is_error: false\r\n      });\r\n\r\n      self.model.getAll({limit:1000})\r\n      .then(function(r){\r\n        self.set({\r\n          is_loading: false,\r\n          meta: r._meta,\r\n          data: r.response\r\n        });\r\n      })\r\n      .catch(function(r){\r\n        var user_message = '';\r\n        if (typeof r != 'undefined' && typeof r.response != 'undefined' && typeof r.response.records != 'undefined'){\r\n            user_message = r.response.records.userMessage;\r\n        }\r\n        self.set({\r\n          is_error: true,\r\n          is_loading: false,\r\n          error_message: user_message\r\n        });\r\n      });\r\n    },\r\n    save(event){\r\n      console.log(event)\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"names":["baseModel","[object Object]","super","this","apiEndpoint","is_loading","is_error","error_message","data","page","title","icon","subtitle","tracker","saving","saved","error","self","set","model","getAll","limit","then","r","meta","_meta","response","catch","user_message","records","userMessage","event","console","log","Model","load","length","save","displayed_settings","setting","display_name","description","value"],"mappings":"2jBAEA,UAAe,IAAI,cAAcA,UAC/BC,cACEC,QACAC,KAAKC,YAAc,cC6DvB,gBAYI,MAAO,CACLC,YAAY,EACZC,UAAU,EACVC,cAAe,GACfC,KAAK,GACLC,KAAK,CACHC,MAAO,WACPC,KAAM,MACNC,SAAU,iDAEZC,QAAQ,CACNC,QAAO,EACPC,OAAM,EACNC,OAAM,gBAYJ,CACNf,OACE,IAAIgB,EAAOd,KAEXc,EAAKC,IAAI,CACPb,YAAY,EACZC,UAAU,IAGZW,EAAKE,MAAMC,OAAO,CAACC,MAAM,MACxBC,KAAK,SAASC,GACbN,EAAKC,IAAI,CACPb,YAAY,EACZmB,KAAMD,EAAEE,MACRjB,KAAMe,EAAEG,aAGXC,MAAM,SAASJ,GACd,IAAIK,EAAe,QACH,IAALL,QAAyC,IAAdA,EAAEG,eAAwD,IAAtBH,EAAEG,SAASG,UACjFD,EAAeL,EAAEG,SAASG,QAAQC,aAEtCb,EAAKC,IAAI,CACPZ,UAAU,EACVD,YAAY,EACZE,cAAeqB,OAIrB3B,KAAK8B,GACHC,QAAQC,IAAIF,yBAlCH5B,KACNgB,MAAQe,MADF/B,KAENgC,oVApGW1B,+FAaTI,QAAa,qDAQVL,KAAK4B,sLAFEC,KAAKN,uBART1B,sBAAaC,yBAAWC,q6BAXrBE,kBAaTI,QAAQG,6LAFFX,sCAAaC,8CAAWC,6fAmBxB+B,gCAALF,wIAiB8EvB,sBAAAA,yyBAjBzEyB,mCAALF,2JAAAA,oDAiB8EvB,6BAAAA,kZAdpD0B,QAAQC,sBAIbD,QAAQE,4DAF8BC,imBAARH,QAAQG,qFAFjCH,QAAQC,iEAEiBD,QAAQG,sCAEtCH,QAAQE"}