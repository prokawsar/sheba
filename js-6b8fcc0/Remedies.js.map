{"version":3,"file":"Remedies.js","sources":["../../../src/utils/ColorConverter.js","../../../src/utils/colorUtils.js","../../../src/components/views/remedies/Remedies.html"],"sourcesContent":["\r\nconst hexToRGB = (h) => {\r\n  let r = 0,\r\n    g = 0,\r\n    b = 0;\r\n\r\n  // 3 digits\r\n  if (h.length == 4) {\r\n    r = \"0x\" + h[1] + h[1];\r\n    g = \"0x\" + h[2] + h[2];\r\n    b = \"0x\" + h[3] + h[3];\r\n\r\n  // 6 digits\r\n  } else if (h.length == 7) {\r\n    r = \"0x\" + h[1] + h[2];\r\n    g = \"0x\" + h[3] + h[4];\r\n    b = \"0x\" + h[5] + h[6];\r\n  }\r\n\r\n  return \"rgb(\" + +r + \",\" + +g + \",\" + +b + \")\";\r\n}\r\n\r\n\r\nconst RGBToHSL = (rgb) => {\r\n\r\n  let sep = rgb.indexOf(\",\") > -1 ? \",\" : \" \";\r\n  rgb = rgb.substr(4).split(\")\")[0].split(sep);\r\n\r\n  for (let R in rgb) {\r\n    let r = rgb[R];\r\n    if (r.indexOf(\"%\") > -1)\r\n      rgb[R] = Math.round(r.substr(0,r.length - 1) / 100 * 255);\r\n  }\r\n\r\n  // Make r, g, and b fractions of 1\r\n  let r = rgb[0] / 255,\r\n      g = rgb[1] / 255,\r\n      b = rgb[2] / 255;\r\n\r\n  // Make r, g, and b fractions of 1. this is for given value (r, g, b)\r\n  // r /= 255;\r\n  // g /= 255;\r\n  // b /= 255;\r\n\r\n  // Find greatest and smallest channel values\r\n  let cmin = Math.min(r, g, b),\r\n    cmax = Math.max(r, g, b),\r\n    delta = cmax - cmin,\r\n    h = 0,\r\n    s = 0,\r\n    l = 0;\r\n\r\n  // Calculate hue\r\n  // No difference\r\n  if (delta == 0)\r\n    h = 0;\r\n  // Red is max\r\n  else if (cmax == r)\r\n    h = ((g - b) / delta) % 6;\r\n  // Green is max\r\n  else if (cmax == g)\r\n    h = (b - r) / delta + 2;\r\n  // Blue is max\r\n  else\r\n    h = (r - g) / delta + 4;\r\n\r\n  h = Math.round(h * 60);\r\n\r\n  // Make negative hues positive behind 360Â°\r\n  if (h < 0)\r\n    h += 360;\r\n\r\n  // Calculate lightness\r\n  l = (cmax + cmin) / 2;\r\n\r\n  // Calculate saturation\r\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n\r\n  // Multiply l and s by 100\r\n  s = +(s * 100).toFixed(1);\r\n  l = +(l * 100).toFixed(1);\r\n\r\n  // return \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\";\r\n  return { 'h':h, 's':s, 'l':l };\r\n}\r\n\r\nexport { hexToRGB, RGBToHSL };","export function rgbToHex(r, g, b) {\r\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n}\r\n\r\nexport function hexToRgb(hex) {\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n}\r\n\r\nexport function colorLuminance(hex){\r\n  let rgb = hexToRgb(hex);\r\n  if(rgb){\r\n    let adjusted = Object.values(rgb).map((value) => {\r\n      let v = value / 255;\r\n      if (v < 0.03928) {\r\n        v = v / 12.92;\r\n      } else {\r\n        v = (v + .055) / 1.055;\r\n        v = Math.pow(v, 2);\r\n      }\r\n      return v;\r\n    });\r\n    let adjustedTotal = (adjusted[0] * .2126) + (adjusted[1] * .7152) + (adjusted[2] * .0722)\r\n    return Math.round(adjustedTotal * 1e5) / 1e5; //5 decimal places\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nexport function findColorInvert(hex){\r\n  if(colorLuminance(hex) > 0.55){\r\n    return 'rgba(0, 0, 0, 0.7)';\r\n  }\r\n  return '#ffffff';\r\n}\r\n\r\nexport function colorInverse(hex){\r\n  var color = hex.substring(1); // remove #\r\n  color = parseInt(color, 16); // convert to integer\r\n  color = 0xFFFFFF ^ color; // invert three bytes\r\n  color = color.toString(16); // convert to hex\r\n  color = (\"000000\" + color).slice(-6); // pad with leading zeros\r\n  return \"#\" + color;\r\n}\r\n\r\nexport function colorComplement(hex){\r\n  var {r,g,b} = hexToRgb(hex);\r\n  r /= 255.0;\r\n  g /= 255.0;\r\n  b /= 255.0;\r\n  var max = Math.max(r, g, b);\r\n  var min = Math.min(r, g, b);\r\n  var h, s, l = (max + min) / 2.0;\r\n\r\n  if(max == min) {\r\n    h = s = 0;  //achromatic\r\n  } else {\r\n      var d = max - min;\r\n      s = (l > 0.5 ? d / (2.0 - max - min) : d / (max + min));\r\n\r\n      if(max == r && g >= b) {\r\n          h = 1.0472 * (g - b) / d ;\r\n      } else if(max == r && g < b) {\r\n          h = 1.0472 * (g - b) / d + 6.2832;\r\n      } else if(max == g) {\r\n          h = 1.0472 * (b - r) / d + 2.0944;\r\n      } else if(max == b) {\r\n          h = 1.0472 * (r - g) / d + 4.1888;\r\n      }\r\n  }\r\n\r\n  h = h / 6.2832 * 360.0 + 0;\r\n\r\n  // Shift hue to opposite side of wheel and convert to [0-1] value\r\n  h+= 180;\r\n  if (h > 360) { h -= 360; }\r\n  h /= 360;\r\n\r\n  // Convert h s and l values into r g and b values\r\n  // Adapted from answer by Mohsen http://stackoverflow.com/a/9493060/4939630\r\n  if(s === 0){\r\n      r = g = b = l; // achromatic\r\n  } else {\r\n      var hue2rgb = function hue2rgb(p, q, t){\r\n          if(t < 0) t += 1;\r\n          if(t > 1) t -= 1;\r\n          if(t < 1/6) return p + (q - p) * 6 * t;\r\n          if(t < 1/2) return q;\r\n          if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n          return p;\r\n      };\r\n\r\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      var p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1/3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1/3);\r\n  }\r\n\r\n  r = Math.round(r * 255);\r\n  g = Math.round(g * 255);\r\n  b = Math.round(b * 255);\r\n\r\n  return rgbToHex(r, g, b)\r\n}","\r\n<div class=\"page-content\">\r\n\r\n  <PageTitle page=\"{page}\"></PageTitle>\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message}>\r\n\r\n      <DataList\r\n      {Model}\r\n      {View}\r\n      {entity_name}\r\n      {route_prefix}\r\n      {has_additional_buttons}\r\n      {search_placeholder}\r\n      bind:is_loading\r\n      bind:is_error\r\n      bind:error_message\r\n      bind:data\r\n      bind:meta\r\n      {columns}\r\n      {searchStringTransformer}\r\n      {valueTransformers}\r\n      {classTransformers}\r\n      {styleTransformers}\r\n      >\r\n\r\n      <a  slot=\"additionalButtons\" href=\"#remedies/add\" class=\"button is-success\">\r\n        <Icon size=\"small\" icon=\"plus-circle\" /><span>Add Remedy</span>\r\n      </a>\r\n      </DataList>\r\n\r\n  </ViewScaffold>\r\n\r\n</div>\r\n\r\n<script>\r\n\r\n  import Model from '../../../models/remedies';\r\n  import { Icon } from '@kws3/helpers';\r\n  import {hexToRGB, RGBToHSL} from '../../../utils/ColorConverter.js';\r\n  import {findColorInvert} from '../../../utils/colorUtils.js';\r\n  \r\n  export default {\r\n    components:{\r\n      ViewScaffold: '../../helpers/ViewScaffold.html',\r\n      DataList: '../../helpers/DataList.html',\r\n      PageTitle: '../../helpers/PageTitle.html',\r\n      Icon,\r\n    },\r\n    helpers: {\r\n      hexToRGB, RGBToHSL, findColorInvert\r\n    },\r\n    data(){\r\n      return {\r\n        model_set: false,\r\n        is_loading: true,\r\n        is_error: false,\r\n        error_message: '',\r\n        meta:{},\r\n        data:[],\r\n        Model,\r\n        View: '_COMPONENT_',\r\n        entity_name: 'Remedies',\r\n        route_prefix: 'remedies/',\r\n        has_additional_buttons: true,\r\n        columns:{\r\n          // 'id':'ID',\r\n          'name': 'Remedy Name',\r\n          'total_data_size': 'Data Saved Percentage',\r\n          'book_references': 'Referenced Books',\r\n          'singleview': '',\r\n          'link': ''\r\n        },\r\n        search_placeholder: 'Name',\r\n        page:{\r\n          title: 'Remedies',\r\n          icon: 'building-o',\r\n          subtitle: 'All Remedies in this System'\r\n        },\r\n        searchStringTransformer: (q) => {\r\n          var qparts = q.split('~'),\r\n          query = [];\r\n\r\n          if(qparts[0] != ''){\r\n            query.push('name[lk]:'+qparts[0]);\r\n          }\r\n\r\n          qparts.shift();\r\n          for(var i = 0; i < qparts.length; i++){\r\n            var _q = qparts[i],\r\n            qpp = _q.split(':');\r\n            if(_q != '' && typeof qpp[1] != 'undefined' && qpp[1] != ''){\r\n              query.push(qpp[0] + '[eq]:' + qpp[1]);\r\n            }\r\n          }\r\n\r\n          return query.join(',');\r\n        },\r\n        valueTransformers:{\r\n          total_data_size(v, row){\r\n            let percentage = parseFloat(row.total_data_size).toFixed(2) + ' %';\r\n            let color = (value) => {\r\n              value = parseFloat(value);\r\n              let color_code = '', color_range = 0;\r\n              let color_ratio = {\r\n                0: '#e01409',\r\n                1: '#e06609',\r\n                2: '#e0a009',\r\n                3: '#D6FA50',\r\n                4: '#CBD89D',\r\n                5: '#04ba83',\r\n                6: '#63d40d',\r\n                7: '#07ba3d',\r\n              }\r\n              \r\n              if(value < 10) {color_code = '#e01409'; color_range = 10}\r\n              else if(value < 20) {color_code = '#e06609'; color_range = 20}\r\n              else if(value < 30) {color_code = '#e0a009'; color_range = 30} \r\n              else if(value < 40) {color_code = '#D6FA50'; color_range = 40}\r\n              else if (value < 50) {color_code = '#CBD89D'; color_range = 50}  \r\n              else if(value < 60) {color_code = '#04ba83'; color_range = 60} \r\n              else if(value < 70) {color_code = '#63d40d'; color_range = 70} \r\n              else if(value < 80) {color_code = '#07ba3d'; color_range = 80}\r\n              \r\n              let theme = RGBToHSL(hexToRGB(color_code)),\r\n                  {h, s, l} = theme;\r\n              return [\r\n              `hsl(${h},${s}%,${l+(color_range-value)}%)`,\r\n               color_code\r\n              ]\r\n              // if(value < 20) color_code = '#ff3860';\r\n              // else if(value < 40) color_code = '#e68a00';\r\n              // else if(value < 60) color_code = '#99cc00';\r\n              // else if(value < 80) color_code = '#86b300';\r\n              // else if (value < 90) color_code = '#4d6600';  \r\n          \r\n              // let theme = RGBToHSL(hexToRGB(color_code)),\r\n              //     {h, s, l} = theme;\r\n              // return color_code\r\n            };\r\n            \r\n            return `<span class='tag is-medium' style='background-color: ${color(percentage)[0]}; color: ${findColorInvert(color(percentage)[1])};'>${percentage}</span>`;\r\n          },\r\n          singleview(v, row){\r\n            return '<a href=\"#remedies/singleview/'  + row.id + '\"><span class=\"icon\"><i class=\"fa fa-eye\"></i></span></a>' ;\r\n          },\r\n          link(v, row) {\r\n            return '<a href=\"#remedies/view/'  + row.id + '\"><span class=\"icon\"><i class=\"fa fa-pencil\"></i></span></a>';\r\n          },\r\n        },\r\n        classTransformers:{\r\n          name(){\r\n            return 'title is-4'\r\n          },\r\n          singleview(){\r\n            return 'is-icon';\r\n          },\r\n          link(){\r\n            return 'is-icon';\r\n          }\r\n        },\r\n        styleTransformers:{},\r\n      }\r\n    },\r\n    computed: {},\r\n  }\r\n</script>"],"names":["hexToRGB","h","r","g","b","length","RGBToHSL","rgb","sep","indexOf","substr","split","R","Math","round","cmin","min","cmax","max","delta","s","l","abs","toFixed","hexToRgb","hex","replace","m","result","exec","parseInt","colorLuminance","adjusted","Object","values","map","value","v","pow","adjustedTotal","findColorInvert","model_set","is_loading","is_error","error_message","meta","data","Model","View","entity_name","route_prefix","has_additional_buttons","columns","name","total_data_size","book_references","singleview","link","search_placeholder","page","title","icon","subtitle","searchStringTransformer","q","qparts","query","push","shift","i","_q","qpp","join","valueTransformers","[object Object]","row","percentage","parseFloat","color","color_code","color_range","theme","id","classTransformers","styleTransformers"],"mappings":"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"}