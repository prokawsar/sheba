{"version":3,"file":"Search-4987ad7f.js","sources":["../../../src/components/views/helpers/Tabs.html","../../../src/components/views/search/helpers/SearchResult.html","../../../src/components/views/search/helpers/RemedyFound.html","../../../src/utils/search.js","../../../src/components/views/search/Search.html"],"sourcesContent":["<PageTabBar {getTotalSpace} {getAvailableSpace} type=\"boxed\" alignment=\"centered\">\r\n  {#each tabs as tab}\r\n    <li class={(tab.name == active_tab) ? 'is-active ' : ''}>\r\n      <a href={tab.link ? tab.link : 'javascript:void(0)'} on:click=\"set({active_tab: tab.name})\">\r\n        <Icon size=\"small\" icon={tab.icon} />\r\n        <span>{tab.title}</span>\r\n      </a>\r\n    </li>\r\n  {/each}\r\n</PageTabBar>\r\n\r\n<script>\r\n  import { Icon } from '@kws3/helpers';\r\n  import PageTabBar from '../../helpers/PageTabBar.html';\r\n\r\n  export default {\r\n    components: {\r\n      Icon,\r\n      PageTabBar\r\n    },\r\n    computed: {\r\n      tabs : ({ link, tabs, id, is_detailed_route }) => {\r\n        if(link)\r\n        {\r\n          tabs.forEach(e => {\r\n            if(e.default_route) {\r\n              e.link = e.is_detailed_route ? `javascript:void(0)` : `${link}/${id}/${e.default_route}`;\r\n            } else {\r\n              e.link = e.default_route ? `javascript:void(0)` : `${link}/${id}/${e.name}`;\r\n            }\r\n          });\r\n          return tabs;\r\n        }\r\n        return tabs;\r\n      },\r\n      is_detailed_route: ({ $nav }) => {\r\n        if ($nav && typeof $nav.params[1] != 'undefined') {\r\n          return $nav.params[1];\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        getTotalSpace(tabbar) {\r\n          var totalSpace = tabbar.children[0].clientWidth;\r\n          return totalSpace;\r\n        },\r\n        getAvailableSpace(tabbar, totalSpace) {\r\n          var availableSpace = tabbar.clientWidth;\r\n          return availableSpace;\r\n        },\r\n        tab_list: {},\r\n        active_tab: 'details'\r\n      }\r\n    }\r\n  }\r\n</script>","<table class=\"table is-narrow\">\r\n  <thead>\r\n    <tr>\r\n      <th>Symptoms</th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {#if selected_symptom != ''}\r\n      {#each loadSymptoms[selected_symptom] as data}\r\n        {#if Array.isArray(data)}\r\n          {#each data as symp}\r\n            <tr>\r\n              <td>{symp}</td>\r\n              <td class=\"is-icon\" ><span class=\"icon\" style=\"cursor: pointer;\" ><i class=\"fa fa-arrow-right\"></i></span>\r\n              </td>\r\n            </tr>\r\n          {/each}\r\n        {:else}\r\n        <tr class=\"transible\">\r\n          <td class=\"\" >{data}</td>\r\n          <td class=\"is-icon\" ><span class=\"icon\" style=\"cursor: pointer;\" ><i class=\"fa fa-arrow-right\"></i></span>\r\n          </td>\r\n        </tr>\r\n        {/if}\r\n      {/each}\r\n    {/if}\r\n  </tbody>\r\n</table>\r\n\r\n<script>\r\n\r\n  export default {\r\n    data(){\r\n      return {\r\n        selected_symptom: '',\r\n        loadSymptoms: []\r\n      }\r\n    }\r\n  }\r\n</script>","<form on:submit=\"saveHistory(event)\">\r\n  <Panel title=\"Matches Remedy\" has_toolbar={true} >\r\n    <div slot='toolbar'>\r\n      {#if remedy_id}\r\n        <a class=\"button is-text \" href=\"#remedies/singleview/{remedy_id}\" data-tooltip=\"View {selected_remedy}\" target=\"_blank\">\r\n          <span class=\"icon is-small\"><i class=\"fa fa-eye\"></i></span>\r\n        <span>View selected Remedy</span>\r\n        </a>\r\n      {/if}\r\n      <button type=\"button\" class=\"button is-info\" on:click=\"fire('back')\" >\r\n        <span class=\"icon is-small\"><i class=\"fa fa-arrow-left\"></i></span>\r\n        <span>Back to Search</span>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"columns\">\r\n      <div class=\"column\">\r\n        <div class=\"columns is-multiline\">\r\n          {#each Object.entries(remedy_found) as [key, value], i }\r\n            <div class=\"column is-4\" style=\"border-radius: 4px; background-color: {remedy_id == value.id ? '#E6E6FA' : ''};\">\r\n              <p class=\"is-size-5\" style=\"line-height: 1.2rem; cursor: pointer;\" on:click=\"showSymptoms(value)\" > {value.name}\r\n                <span class=\"tag is-{i == 0 ? 'link' : 'success'} is-medium is-pulled-right\">{value.mark}</span>\r\n              </p>\r\n            </div>\r\n        {/each}\r\n        </div>\r\n        <hr >\r\n        <div class=\"columns is-multiline\">\r\n          {#each Object.entries(result_matched_fields) as [key, value], i }\r\n            <div class=\"column is-4\">\r\n              <Transition transition=\"{true}\" type=\"fly\" x=\"{30}\" delay={50*10}>\r\n                <label class=\"label title is-size-4\">{key}</label>\r\n                {#each value as item}\r\n                  <p class=\"is-size-5\" style=\"line-height: 1.2rem;\"> {@html matched_color(item.matched, item.query)}. </p>\r\n                  <hr class=\"is-small\">\r\n                {/each}\r\n              </Transition>\r\n            </div>\r\n          {/each}\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          {#if !edit_case}\r\n            <p class=\"control\">\r\n              <label class=\"label\"> &nbsp; </label>\r\n              <SubmitButton bind:disabled classes=\"is-primary is-pulled-right\" icon=\"save\" icon_size=\"small\" text=\"Save History\" bind:tracker />\r\n            </p>\r\n          {/if}\r\n\r\n          <p class=\"control is-pulled-left has-text-grey\">\r\n            <span class=\"icon\"><i class=\"fa fa-info\"></i></span>\r\n            Matched text with query are in colored text.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </Panel>\r\n</form>\r\n\r\n<script>\r\n\r\n  import { Panel } from '@kws3/helpers';\r\n  import { SubmitButton } from '@kws3/buttons';\r\n  import Transition from '@kws3/transitions';\r\n\r\n  export default {\r\n    components: {\r\n      Panel, SubmitButton, Transition\r\n    },\r\n    helpers: {\r\n      matched_color(original, query){\r\n        return original && original.replace(query, '<span class=\"has-text-info\">'+ query + '</span>')\r\n      }\r\n    },\r\n    data(){\r\n      return{\r\n        edit_case: false,\r\n        remedy_id: null,\r\n        selected_remedy: '',\r\n        remedy_found: {},\r\n        field_name: '',\r\n        result_matched_fields: [],\r\n        tracker: {}\r\n      }\r\n    },\r\n    computed: {\r\n      disabled: ({data}) => !data.patient,\r\n    },\r\n    methods: {\r\n      showSymptoms(value){\r\n        if(value){\r\n          this.set({ remedy_id: value.id, selected_remedy: value.name});\r\n          this.fire('showSymptoms', value);\r\n        }\r\n      },\r\n      saveHistory(e){\r\n        e.preventDefault();\r\n        this.fire('saveHistory');\r\n\r\n      }\r\n    }\r\n  }\r\n</script>","/*\r\nreturn resut as array of objects\r\n[\r\n  {\r\n    id: remedy id,\r\n    name: remedy name,\r\n    mark: remedy gets matched mark\r\n    fields:[ array of matched symptoms and queries\r\n      {\r\n        matched:\r\n        query:\r\n      }\r\n    ]\r\n  }\r\n]\r\n*/\r\nexport default function(data, remedies){\r\n  let _payload = [],\r\n      matched_remedies = [],\r\n      omitted_field = [ 'id', 'name', 'created', 'modified', 'deleted', 'patient', 'treatments', 'book_references', 'total_data_size'];\r\n\r\n  //reducing null fields from payload\r\n  for(let [key, value] of Object.entries(data)) {\r\n    if(value && !omitted_field.includes(key)){\r\n      _payload[key] = value.split(',').filter( (e) => {\r\n        return e != null && e.trim() != '';\r\n      })\r\n    }\r\n  }\r\n  // console.log(_payload)\r\n\r\n  for(let [key, values] of Object.entries(_payload)) { // values are array of symptoms\r\n    values.forEach( (value) => {\r\n      remedies.forEach( (remedy) => {\r\n        if(remedy[key] != '' && remedy[key] ){\r\n          remedy[key].split(',').forEach( (symptom) =>{ // matching with each symptoms for remedy\r\n\r\n            if( value.trim() != '' && symptom.trim().includes(value.trim())){\r\n              var is_remedy_exist = matched_remedies.find(obj => {\r\n                return obj.name === remedy['name']\r\n              })\r\n\r\n              if(is_remedy_exist){\r\n                let objIndex = matched_remedies.findIndex((obj => obj.id == is_remedy_exist.id));\r\n                matched_remedies[objIndex].mark++;\r\n                if(!matched_remedies[objIndex].fields[key]){\r\n                  matched_remedies[objIndex].fields[key] = [];\r\n                  matched_remedies[objIndex].fields[key].push({\r\n                    matched: symptom.trim(),\r\n                    query: value.trim()\r\n                  });\r\n                }else{\r\n                  matched_remedies[objIndex].fields[key].push({\r\n                    matched: symptom.trim(),\r\n                    query: value.trim()\r\n                  });\r\n                }\r\n              }else{\r\n                let fields = {};\r\n                fields[key] = [];\r\n                fields[key].push({\r\n                  matched: symptom.trim(),\r\n                  query: value.trim()\r\n                });\r\n\r\n                matched_remedies.push({\r\n                  id: remedy.id,\r\n                  name: remedy.name,\r\n                  mark: 1,\r\n                  fields\r\n                })\r\n              }\r\n              // if( matched_remedies.hasOwnProperty(remedy['name']) ){\r\n              //   matched_remedies[remedy['name']].mark++;\r\n\r\n              //   if( !matched_remedies[remedy['name']].fields[key] ){\r\n              //     matched_remedies[remedy['name']].fields[key] = [];\r\n              //   }\r\n              //   matched_remedies[remedy['name']].fields[key].push({\r\n              //     matched: symptom.trim(),\r\n              //     query: value.trim()\r\n              //   });\r\n\r\n              // }else{\r\n              //   matched_remedies[remedy['name']] = {};\r\n              //   matched_remedies[remedy['name']].id = remedy['id'];\r\n              //   matched_remedies[remedy['name']].mark = 1;\r\n\r\n              //   matched_remedies[remedy['name']].fields = {};\r\n              //   matched_remedies[remedy['name']].fields[key] = [];\r\n              //   matched_remedies[remedy['name']].fields[key].push({\r\n              //     matched: symptom.trim(),\r\n              //     query: value.trim()\r\n              //   });\r\n\r\n              // }\r\n            }\r\n          })\r\n        }\r\n\r\n      })\r\n    })\r\n  }\r\n  let sortable = matched_remedies.sort((a, b) => (a.mark < b.mark) ? 1 : -1)\r\n  return sortable.slice(0, 10);\r\n\r\n}","<div class=\"page-content\">\r\n\r\n  {#if !edit_case}\r\n  <PageTitle page=\"{page}\">\r\n    <LabsTabs {tabs} bind:active_tab />\r\n  </PageTitle>\r\n  {/if}\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message} class=\"has-fullpage-tabs has-multilevel-tabs\">\r\n\r\n    {#if tracker.error}\r\n    <Notification type=\"danger\">\r\n      {error_message}\r\n    </Notification>\r\n    {/if}\r\n\r\n    {#if active_tab == 'patient_cc'}\r\n      <PatientAdd bind:patient on:addPatient bind:data bind:p_data bind:searchable_symp bind:case_id />\r\n\r\n    {/if}\r\n    {#if active_tab == 'case_history'}\r\n      <div class=\"content\">\r\n        {#if !has_searched}\r\n          <form on:submit=\"search(event)\">\r\n            <Panel title=\"Patient Symptoms\" has_toolbar={true} >\r\n\r\n              <div class=\"columns\">\r\n                <div class=\"column\">\r\n                  <Message title=\"Records\" color='light'>\r\n                    {#each Object.entries(data) as [key, value], i}\r\n                      {#if value && !omitted_field.includes(key)}\r\n                        <p><span class=\"has-text-weight-bold is-size-5\">{key}</span>: {value}</p> <br>\r\n                      {/if}\r\n                    {/each}\r\n                    {#if !Object.entries(data).length}\r\n                      No records yet\r\n                    {/if}\r\n                  </Message>\r\n                </div>\r\n\r\n                <div class=\"column\">\r\n\r\n                  <div class=\"field\">\r\n                    <span class=\"select is-fullwidth\">\r\n                      <select class=\"input\" bind:value=\"selected_section\" >\r\n                        <option value=\"\">Select Type</option>\r\n                        {#each Object.entries(data) as [key, value], i}\r\n                          {#if !omitted_field.includes(key)}\r\n                            <option value=\"{key}\">{key}</option>\r\n                          {/if}\r\n                        {/each}\r\n                      </select>\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div class=\"field\">\r\n                    <p class=\"control\">\r\n                      <label class=\"label\" style=\"text-transform: capitalize;\">{selected_section}</label>\r\n                      {#if data[selected_section]}\r\n                        <textarea class=\"textarea\" readonly placeholder=\"{selected_section}...\" bind:value=\"data[selected_section]\" style=\"height: 15rem;\"></textarea>\r\n                      {:else}\r\n                        <textarea class=\"textarea\" readonly placeholder=\"{selected_section}...\" style=\"height: 15rem;\"></textarea>\r\n                      {/if}\r\n\r\n                    </p>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"column\">\r\n                  <p class=\"title is-5\">Suggestions</p>\r\n\r\n                  <div class=\"field\">\r\n                    <p class=\"control\">\r\n                      <label class=\"label\" style=\"text-transform: capitalize;\">{selected_section} Symptoms in the System</label>\r\n                        <SearchableSelect\r\n                          data=\"{searchable_withkey[selected_section]}\"\r\n                          placeholder=\"Choose...\"\r\n                          bind:_name=\"selected_keyed_symp\"\r\n                          searchKey=\"name\"\r\n                          searchValue=\"id\"\r\n                        />\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div class=\"field\">\r\n                    <p class=\"control\">\r\n                      <label class=\"label\" style=\"text-transform: capitalize;\">All Symptoms in the System</label>\r\n                        <SearchableSelect\r\n                          data=\"{searchable_symp}\"\r\n                          placeholder=\"Choose...\"\r\n                          bind:_name=\"selected_all_symp\"\r\n                          searchKey=\"name\"\r\n                          searchValue=\"id\"\r\n                        />\r\n                    </p>\r\n                  </div>\r\n                  <div class=\"field is-grouped is-pulled-right\">\r\n                    {#if edit_case}\r\n                    <p class=\"control\">\r\n                      <label class=\"label\">&nbsp;</label>\r\n                      <button type=\"button\" class=\"button  is-{tracker.saving ? 'loading' : ''} is-primary is-medium\" on:click=\"fire('save')\" >\r\n                        <span class=\"icon\"> <i class=\"fa fa-{tracker.saved ? 'check' : 'save'}\"></i> </span>\r\n                        <span>Save only</span>\r\n                      </button>\r\n\r\n                    </p>\r\n                    {/if}\r\n\r\n                    <p class=\"control\">\r\n                      <label class=\"label\">&nbsp;</label>\r\n                      <SubmitButton classes=\"is-primary is-medium is-pulled-right\" icon=\"search\" icon_size=\"small\" text=\"Search\" bind:tracker />\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Panel>\r\n          </form>\r\n          <br>\r\n        {/if}\r\n\r\n        {#if has_searched}\r\n          <div class=\"columns\">\r\n            <div class=\"column\">\r\n              <RemedyFound\r\n                bind:data\r\n                bind:tracker\r\n                bind:remedy_found\r\n                bind:edit_case\r\n                {field_name}\r\n                {result_matched_fields}\r\n                on:back=\"back()\"\r\n                on:showSymptoms\r\n                on:saveHistory=\"saveHistory()\"\r\n              />\r\n            </div>\r\n            <div class=\"column\">\r\n              <Treatment\r\n                bind:remedy_names\r\n                bind:data\r\n                bind:tracker\r\n                bind:remedy_found\r\n                on:saveTreatment\r\n              />\r\n            </div>\r\n          </div>\r\n          <br>\r\n\r\n        {/if}\r\n\r\n        {#if has_searched && !data.patient}\r\n          <div class=\"columns is-centered\">\r\n            <label class=\"subtitle is-size-5 has-text-warning is-centered\"> Selection patient is mendatory for saving Case History or Treatment ! </label>\r\n          </div>\r\n        {/if}\r\n\r\n        {#if !has_searched}\r\n          <Sections\r\n            bind:data\r\n            bind:remedies\r\n            bind:filterFields\r\n            bind:selected_section\r\n            on:reset=\"reset(event)\"\r\n          />\r\n\r\n        {/if}\r\n      </div>\r\n   {/if}\r\n\r\n\r\n  </ViewScaffold>\r\n</div>\r\n\r\n<script>\r\n  import Model from '../../../models/histories';\r\n  import Remedies from '../../../models/remedies';\r\n  import TreatmentModel from '../../../models/treatments';\r\n\r\n  import Router from '../../../services/router';\r\n  import { Icon, Notification, Panel, Message } from '@kws3/helpers';\r\n  import { SubmitButton } from '@kws3/buttons';\r\n  import SearchResult from './helpers/SearchResult.html';\r\n  import SearchableSelect from '@kws3/searchable-select';\r\n  import PatientAdd from './helpers/PatientAdd.html';\r\n  import RemedyFound from './helpers/RemedyFound.html';\r\n  import Treatment from './helpers/Treatment.html';\r\n  import Sections from './helpers/Sections.html';\r\n  import LabsTabs from '../helpers/Tabs.html';\r\n  import _search from '../../../utils/search.js';\r\n\r\n  export default {\r\n    components: {\r\n      ViewScaffold: '../../helpers/ViewScaffold.html',\r\n      PageTitle: '../../helpers/PageTitle.html',\r\n      Panel, Notification, SubmitButton, Treatment, Message, Sections,\r\n      SearchableSelect, PatientAdd, RemedyFound, LabsTabs\r\n    },\r\n    helpers: {\r\n      _search\r\n    },\r\n    data() {\r\n      return {\r\n        is_loading: false,\r\n        is_error: false,\r\n        edit_case: false,\r\n        error_message: '',\r\n        is_active_case_modal: false,\r\n        selected_section: '',\r\n        selected_all_symp: '',\r\n        selected_keyed_symp: '',\r\n        active_tab: 'patient_cc',\r\n        result_matched_fields: [],\r\n        remedies: {},\r\n        data: {},\r\n        remedy_found: {},\r\n        remedy_names: [],\r\n        omitted_field: [ 'id', 'name', 'created', 'modified', 'deleted', 'patient', 'treatments', 'book_references', 'total_data_size'],\r\n        patient: {\r\n          name: '',\r\n          age: '',\r\n          gender: '',\r\n          phone: '',\r\n          address: '',\r\n          patient_type: 'new'\r\n        },\r\n        tracker: {\r\n          saving: false,\r\n          saved: false,\r\n          error: false,\r\n        },\r\n        page: {\r\n          title: 'Search Remedy',\r\n          icon: 'search',\r\n          icon_badge: ''\r\n        },\r\n        tabs: [\r\n          {icon: 'info-circle', name: 'patient_cc', title: 'Patient/CC'},\r\n          {icon: 'pencil', name: 'case_history', title: 'Case History'},\r\n        ],\r\n        valid:false\r\n      }\r\n    },\r\n    computed: {\r\n      has_searched: ({remedy_found}) => Object.keys(remedy_found).length,\r\n      user_role: ({ $user }) => $user && $user.role,\r\n      active_tab: ({edit_case}) => edit_case ? 'case_history' : 'patient_cc',\r\n      filterFields: ({remedies, omitted_field}) => {\r\n\r\n        let last = ['built', 'constitution', 'diathesis', 'miasm', 'temperament', 'temperature_and_weather',\r\n         'thermal_sensitivity', 'sensation', 'tendency_take_cold', 'desires', 'aversions', 'birth_history_milestones',\r\n         'tissues', 'stages_and_states', 'attacks_and_side', 'ailments_from', 'affections', 'clinical', 'modalities',\r\n         'mental_state_and_disorders', 'appearance_and_behavior', 'attention_and_concentration', 'expression',\r\n         'consciousness', 'mood_and_affect', 'memory', 'speech', 'thoughts_and_ideas', 'perception', 'intelligence',\r\n         'judgment', 'fear_and_live_alone', 'boring', 'peaceful', 'anger', 'hobby', 'habit', 'addiction', 'nutrition',\r\n         'anaemia', 'cyanosis', 'dehydration', 'jaundice', 'pulse', 'breathing', 'peculiar_rare_symptoms'\r\n        ];\r\n\r\n        let filtered = [];\r\n        if(remedies.length){\r\n          for(let [key, value] of Object.entries(remedies[0])) {\r\n            if( !last.includes(key) && !omitted_field.includes(key)){\r\n              filtered.push(key)\r\n            }\r\n          }\r\n          filtered.push(...last)\r\n          return filtered\r\n        }\r\n      },\r\n      remedy_names: ({remedies}) => {\r\n        let _names= [];\r\n\r\n        for(let item in remedies){\r\n          let single = remedies[item];\r\n          _names.push(single.name);\r\n        }\r\n        return _names;\r\n      },\r\n      loadSymptoms: ({remedies}) => {\r\n        let symptoms = {}, _symp = [];\r\n        // let _symp = []\r\n\r\n        for(let i in remedies){\r\n          Object.entries(remedies[i]).forEach(([key, value]) => {\r\n          _symp[key] = []\r\n          })\r\n          break;\r\n        }\r\n        for(let item in remedies){\r\n          let single = remedies[item];\r\n\r\n          Object.entries(single).forEach(([key, value]) => {\r\n            if(value){\r\n              if(typeof value == 'string'){\r\n                _symp[key].push(value.split(','))\r\n              }\r\n              symptoms[key] = (symptoms[key] ? symptoms[key] : '') + ', ' + value;\r\n            }\r\n          })\r\n        }\r\n        return _symp\r\n      },\r\n      searchable_withkey({loadSymptoms}){\r\n        let final = [], total = 0;\r\n\r\n        Object.entries(loadSymptoms).forEach(([key, value]) => {\r\n          let one = loadSymptoms[key];\r\n            final[key] = [];\r\n            for(let i in one){\r\n              if(Array.isArray(one[i])){\r\n                for(let ind in one[i]){\r\n                  final[key].push({ id: total++, name: one[i][ind].trim() })\r\n                }\r\n              }\r\n            }\r\n          })\r\n        return final\r\n      },\r\n      searchable_symp({loadSymptoms, omitted_field}){\r\n        let final = [], total = 0;\r\n        for(let item in loadSymptoms){\r\n          if(!omitted_field.includes(item)){\r\n            let one = loadSymptoms[item];\r\n\r\n              for(let i in one){\r\n                if(Array.isArray(one[i])){\r\n                  for(let ind in one[i]){\r\n                    let value = one[i][ind] + ' -> ' + item;\r\n                    final.push({ id: total++, name: value.trim() })\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        return final\r\n      }\r\n    },\r\n    oncreate(){\r\n\r\n      this.on('state', ({ changed, current, previous }) => {\r\n        let {data, selected_section, selected_all_symp} = this.get()\r\n\r\n        if(current.selected_keyed_symp != previous.selected_keyed_symp){\r\n          // got it selected symptom\r\n          data[selected_section] =  data[selected_section] ? data[selected_section]  + ', ' + current.selected_keyed_symp : ', ' + current.selected_keyed_symp;\r\n          data[selected_section] = Array.from(new Set(data[selected_section].split(','))).toString();\r\n          this.set({data})\r\n        }\r\n\r\n        if(current.selected_all_symp != previous.selected_all_symp){\r\n          let section = selected_all_symp.split(' -> ');\r\n          let field = section[1], value = section[0];\r\n\r\n          data[field] = data[field] ? data[field]  + ', ' + value : value;\r\n          this.set({data, selected_section: field, selected_keyed_symp: value})\r\n        }\r\n\r\n      });\r\n\r\n      this.on('saveTreatment', treatments => {\r\n        this.saveTreatment(treatments)\r\n      });\r\n\r\n      this.on('addPatient', patient => {\r\n        let {data} = this.get();\r\n        if(patient.case_histories){\r\n          let case_id = patient.case_histories[0].id;\r\n          this.set({ case_id });\r\n\r\n        }\r\n        data.patient = patient;\r\n        this.set({data});\r\n      });\r\n\r\n      this.on('showSymptoms', value => {\r\n        this.showSymptoms(value);\r\n      })\r\n\r\n      this.loadRemedies();\r\n    },\r\n    methods: {\r\n      loadRemedies(){\r\n        Remedies.getAll({limit:1000})\r\n        .then( (r) => {\r\n          this.set({ remedies: r.response })\r\n        })\r\n        .catch( (r) => {\r\n          console.log(r)\r\n        })\r\n      },\r\n      reset(comp){\r\n        comp && comp.doing()\r\n        this.set({ data: {}, p_data: {} })\r\n        this.set({ remedy_found: {} })\r\n        comp && comp.done();\r\n      },\r\n      back(){\r\n        this.set({ remedy_found: {} })\r\n        this.set({ result_matched_fields: {} })\r\n\r\n      },\r\n      showSymptoms(value){\r\n        this.set({ result_matched_fields: value.fields })\r\n      },\r\n      saveHistory(){\r\n        let {data} = this.get();\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        Model.create(data)\r\n        .then( (r) => {\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: true,\r\n              error: false\r\n            },\r\n            data: r.response,\r\n          });\r\n\r\n          setTimeout( () => {\r\n            this.set({ tracker: { saved: false } });\r\n            Router.navigate('history');\r\n          }, 1500);\r\n\r\n        })\r\n        .catch( (r) => {\r\n          if (r.response.records.errorCode == '406') {\r\n            this.set({error_message: r.response.records.userMessage});\r\n          }else{\r\n            this.set({error_message: 'There was an error adding history'});\r\n          }\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: false,\r\n              error: true\r\n            }\r\n          });\r\n\r\n          setTimeout( () => {\r\n            this.set({ tracker: { error: false } });\r\n          }, 3000);\r\n\r\n        });\r\n      },\r\n      saveTreatment(treatments){\r\n        let {data, edit_case} = this.get();\r\n        if(edit_case){\r\n          this.fire('saveTreatment', treatments);\r\n          return;\r\n        }\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        TreatmentModel.createWithCase({data: treatments, case: data})\r\n        .then( (r) => {\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: true,\r\n              error: false\r\n            }\r\n          });\r\n\r\n          setTimeout( () => {\r\n            this.set({ tracker: { saved: false } });\r\n            Router.navigate('history');\r\n          }, 1500);\r\n\r\n        })\r\n        .catch( (r) => {\r\n          console.log(r)\r\n        })\r\n\r\n\r\n      },\r\n      search(e) {\r\n        e.preventDefault();\r\n        var { data, valid, remedies }  = this.get();\r\n        let matched_remedies = {};\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        matched_remedies = _search(data, remedies);\r\n        this.set({ remedy_found: matched_remedies})\r\n\r\n        setTimeout( () => {\r\n          this.set({ tracker: { saved: false } });\r\n          // Router.navigate('search');\r\n        }, 1500);\r\n\r\n      },\r\n\r\n    }\r\n  }\r\n\r\n</script>"],"names":["link","tabs","id","is_detailed_route","forEach","e","default_route","name","$nav","params","getTotalSpace","tabbar","children","clientWidth","getAvailableSpace","totalSpace","tab_list","active_tab","set","tab","length","title","icon","selected_symptom","loadSymptoms","data","symp","Array","isArray","patient","edit_case","remedy_id","selected_remedy","remedy_found","field_name","result_matched_fields","tracker","original","query","replace","[object Object]","value","this","fire","preventDefault","showSymptoms","Object","entries","saveHistory","event","mark","i","matched_color","item","matched","key","disabled","remedies","_payload","matched_remedies","omitted_field","includes","split","filter","trim","values","remedy","symptom","is_remedy_exist","find","obj","objIndex","findIndex","fields","push","sort","a","b","slice","keys","$user","role","last","filtered","_names","single","_symp","final","total","one","ind","is_loading","is_error","error_message","is_active_case_modal","selected_section","selected_all_symp","selected_keyed_symp","remedy_names","age","gender","phone","address","patient_type","saving","saved","error","page","icon_badge","valid","Remedies","getAll","limit","then","r","response","catch","console","log","comp","doing","p_data","done","get","Model","create","setTimeout","Router","navigate","records","errorCode","userMessage","treatments","TreatmentModel","createWithCase","case","_search","on","changed","current","previous","from","Set","toString","section","field","saveTreatment","case_histories","case_id","loadRemedies","searchable_symp","has_searched","searchable_withkey","search","back","filterFields","reset"],"mappings":"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"}