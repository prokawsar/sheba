{"version":3,"file":"ViewHistory.js","sources":["../../../src/components/views/casehistory/ViewHistoryStatic.html","../../../src/components/views/casehistory/ViewHistory.html"],"sourcesContent":["<div class=\"page-content\">\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message}>\r\n\r\n  <Panel title=\"Patient symptoms\" has_toolbar={true} >\r\n    <div slot='toolbar'>\r\n      <ConfirmButton\r\n        text=\"Delete History\"\r\n        color=\"danger\"\r\n        icon=\"trash\"\r\n        icon_only=\"{false}\"\r\n        on:do=\"deleteHistory(event)\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"columns\">\r\n      <div class=\"column is-5\">\r\n        {#if data.patient}\r\n          <Message color='info'>\r\n            <p class=\"title is-5\">Patient Details</p>\r\n            <PatientDetails data={data.patient} />\r\n          </Message>\r\n        {/if}\r\n\r\n        {#if data.treatments}\r\n          <Message color='info'>\r\n            <Timeline bind:data is_static=\"true\" />\r\n          </Message>\r\n        {/if}\r\n      </div>\r\n      <div class=\"column is-7\">\r\n        <Message title=\"Records\" color='info'>\r\n          {#each Object.entries(data) as [key, value], i}\r\n            {#if value && !omitted_field.includes(key)}\r\n            <p class=\"is-size-5\"><span class=\"has-text-weight-bold is-size-4\">{key}</span>: {value}</p> <br>\r\n            {/if}\r\n          {/each}\r\n        </Message>\r\n      </div>\r\n    </div>\r\n  </Panel>\r\n\r\n  </ViewScaffold>\r\n</div>\r\n\r\n<script>\r\n  import Model from '../../../models/histories';\r\n  import {Icon, Panel, Message} from '@kws3/helpers';\r\n  import { ConfirmButton } from '@kws3/buttons';\r\n  import Router from '../../../services/router';\r\n  import PatientDetails from '../helpers/PatientDetails.html';\r\n  import Timeline from '../helpers/Timeline.html';\r\n\r\n  export default {\r\n    components: {\r\n      ViewScaffold: '../../helpers/ViewScaffold.html',\r\n      PageTitle: '../../helpers/PageTitle.html',\r\n      Message, ConfirmButton, Timeline,\r\n      Icon, Panel, PatientDetails\r\n\r\n    },\r\n    data() {\r\n      return {\r\n        is_loading: false,\r\n        is_error: false,\r\n        error_message: '',\r\n        data: {},\r\n        meta: {},\r\n        omitted_field: [ 'id', 'name', 'created', 'modified', 'deleted', 'patient', 'treatments'],\r\n        tracker: {\r\n          saving: false,\r\n          saved: false,\r\n          error: false,\r\n        },\r\n        page: {\r\n          title: 'View Case History',\r\n          subtitle: 'Case History details',\r\n          icon: 'building-o',\r\n          icon_badge: 'pencil'\r\n        },\r\n      }\r\n    },\r\n    computed: {\r\n      entityId: ({ $nav }) => $nav && $nav.params[0],\r\n    },\r\n    oncreate() {\r\n      var { entityId } = this.get();\r\n      this.load();\r\n    },\r\n    methods: {\r\n      load() {\r\n        var { entityId } = this.get();\r\n\r\n        this.set({\r\n          is_loading: true,\r\n          is_error: false\r\n        });\r\n\r\n        Model && Model.getOne(entityId)\r\n        .then((r) => {\r\n          this.set({\r\n            is_loading: false,\r\n            meta: r._meta,\r\n            data: r.response\r\n          });\r\n\r\n        })\r\n        .catch((r) => {\r\n          var user_message = '';\r\n          if (typeof r != 'undefined' && typeof r.response != 'undefined' && typeof r.response.records != 'undefined') {\r\n            user_message = r.response.records.userMessage;\r\n          }\r\n          this.set({\r\n            'is_error': true,\r\n            'is_loading': false,\r\n            'error_message': user_message\r\n          });\r\n        });\r\n      },\r\n      deleteHistory(comp){\r\n\r\n        comp && comp.doing();\r\n        Model.delete(this.get().entityId)\r\n        .then( (r) => {\r\n          comp.done();\r\n          Router.navigate('history');\r\n        })\r\n        .catch( () => {\r\n          comp.error();\r\n        });\r\n\r\n\r\n      },\r\n\r\n    }\r\n  }\r\n</script>","<div class=\"page-content\">\r\n  <PageTitle page=\"{page}\">\r\n    <a class=\"button is-info is-pulled-right\" href=\"#history\">\r\n      <Icon icon=\"long-arrow-left\" size=\"small\" />\r\n      <span>Back to All Histories</span>\r\n    </a>\r\n  </PageTitle>\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message} class=\"has-fullpage-tabs has-multilevel-tabs\">\r\n\r\n    <LabsTabs {tabs} bind:active_tab />\r\n\r\n    <!-- <SlidingPaneSet style=\"height:{pane_height}px\">\r\n      <SlidingPane active={active_tab == 'static_view'} track_height on:heightChange> -->\r\n        {#if active_tab == 'static_view'}\r\n          <ViewHistoryStatic bind:is_error bind:error_message />\r\n\r\n        {/if}\r\n      <!-- </SlidingPane>\r\n\r\n      <SlidingPane active={false} track_height on:heightChange> -->\r\n        {#if active_tab == 'edit_view'}\r\n          <Search edit_case={true} bind:data bind:tracker on:save=\"save()\" on:saveTreatment />\r\n\r\n        {/if}\r\n      <!-- </SlidingPane>\r\n    </SlidingPaneSet> -->\r\n\r\n  </ViewScaffold>\r\n</div>\r\n\r\n<script>\r\n  import Model from '../../../models/histories';\r\n  import TreatmentModel from '../../../models/treatments';\r\n  import {Icon, Notification, Panel} from '@kws3/helpers';\r\n  import { SubmitButton, ConfirmButton } from '@kws3/buttons';\r\n  import {SlidingPaneSet, SlidingPane} from '@kws3/sliding-panes';\r\n  import LabsTabs from '../helpers/Tabs.html';\r\n  import ViewHistoryStatic from './ViewHistoryStatic.html';\r\n  import Search from '../search/Search.html';\r\n\r\n  export default {\r\n    components: {\r\n      ViewScaffold: '../../helpers/ViewScaffold.html',\r\n      PageTitle: '../../helpers/PageTitle.html',\r\n      Notification, SubmitButton, ConfirmButton,\r\n      Icon, Panel, LabsTabs, ViewHistoryStatic,\r\n      SlidingPaneSet, SlidingPane, Search,\r\n    },\r\n    data() {\r\n      return {\r\n        is_loading: false,\r\n        is_error: false,\r\n        error_message: '',\r\n        pane_height: 500,\r\n        data: {},\r\n        meta: {},\r\n        tracker: {\r\n          saving: false,\r\n          saved: false,\r\n          error: false,\r\n        },\r\n        page: {\r\n          title: 'View Case History',\r\n          subtitle: 'Case History details',\r\n          icon: 'building-o',\r\n          icon_badge: 'pencil'\r\n        },\r\n        active_tab: 'static_view',\r\n        tabs: [\r\n          {icon: 'info-circle', name: 'static_view', title: 'Static'},\r\n          {icon: 'pencil', name: 'edit_view', title: 'Edit Case History'},\r\n        ],\r\n      }\r\n    },\r\n    computed: {\r\n      entityId: ({ $nav }) => $nav && $nav.params[0],\r\n    },\r\n    oncreate() {\r\n      this.on('heightChange', ({height}) => {\r\n        this.set({pane_height: height})\r\n      });\r\n      this.on('saveTreatment', (treatments) => {\r\n        this.saveTreatment(event, treatments);\r\n      });\r\n\r\n      this.on('state', ({ changed, current, previous }) => {\r\n        // console.log(current)\r\n      });\r\n\r\n      this.load();\r\n\r\n    },\r\n    methods: {\r\n      load() {\r\n        var { entityId } = this.get();\r\n\r\n        this.set({\r\n          is_loading: true,\r\n          is_error: false\r\n        });\r\n\r\n        Model && Model.getOne(entityId)\r\n        .then((r) => {\r\n          this.set({\r\n            is_loading: false,\r\n            meta: r._meta,\r\n            data: r.response\r\n          });\r\n\r\n        })\r\n        .catch((r) => {\r\n          var user_message = '';\r\n          if (typeof r != 'undefined' && typeof r.response != 'undefined' && typeof r.response.records != 'undefined') {\r\n            user_message = r.response.records.userMessage;\r\n          }\r\n          this.set({\r\n            'is_error': true,\r\n            'is_loading': false,\r\n            'error_message': user_message\r\n          });\r\n        });\r\n      },\r\n      save() {\r\n        var {data, entityId, tracker} = this.get();\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        Model.save(entityId, data)\r\n        .then(r => {\r\n          this.set({\r\n            data: r.response,\r\n            tracker: {\r\n              saving: false,\r\n              saved: true,\r\n              error: false\r\n            }\r\n          });\r\n\r\n          setTimeout(() => {\r\n            tracker.saved = false;\r\n            this.set({tracker});\r\n          }, 1500);\r\n        })\r\n        .catch(r => {\r\n          console.log(r)\r\n          this.set({error_message: 'There was an error updating history'});\r\n\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: false,\r\n              error: true\r\n            }\r\n          });\r\n\r\n          setTimeout(() => {\r\n            this.set({tracker: {error: false}});\r\n          }, 1500);\r\n        });\r\n      },\r\n      saveTreatment(event, treatments) {\r\n        event.preventDefault();\r\n        let {data, entityId} = this.get();\r\n\r\n        let structured = {\r\n          prescribe: {\r\n            id: entityId,\r\n            patient: data.patient.id\r\n          },\r\n          data: treatments\r\n        };\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        TreatmentModel && TreatmentModel.createWithCase(structured)\r\n        .then( (r) => {\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: true,\r\n              error: false\r\n            }\r\n          });\r\n\r\n          setTimeout( () => {\r\n            this.set({ tracker: { saved: false } });\r\n            // this.load();\r\n          }, 1500);\r\n\r\n        })\r\n        .catch( (r) => {\r\n          console.log(r)\r\n        })\r\n      },\r\n    }\r\n  }\r\n</script>"],"names":["$nav","params","is_loading","is_error","error_message","data","meta","omitted_field","tracker","saving","saved","error","page","title","subtitle","icon","icon_badge","[object Object]","entityId","this","get","set","Model","getOne","then","r","_meta","response","catch","user_message","records","userMessage","comp","doing","delete","done","Router","navigate","load","deleteHistory","event","Object","entries","length","patient","treatments","key","value","includes","pane_height","active_tab","tabs","name","save","setTimeout","console","log","preventDefault","structured","prescribe","id","TreatmentModel","createWithCase","on","height","saveTreatment","changed","current","previous"],"mappings":"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"}