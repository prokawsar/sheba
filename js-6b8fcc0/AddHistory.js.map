{"version":3,"file":"AddHistory.js","sources":["../../../src/components/views/casehistory/AddHistory.html"],"sourcesContent":["<div class=\"page-content\">\r\n\r\n  <PageTitle page=\"{page}\">\r\n\r\n  </PageTitle>\r\n\r\n  <ViewScaffold {is_loading} {is_error} {error_message}>\r\n\r\n    {#if tracker.error}\r\n    <Notification type=\"danger\">\r\n      {error_message}\r\n    </Notification>\r\n    {/if}\r\n\r\n    <PatientAdd bind:patient on:addPatient bind:data />\r\n    <br>\r\n  {#if !has_searched }\r\n    <form on:submit=\"saveHistory(event)\">\r\n      <Panel title=\"Patient Symptoms\" has_toolbar={true} >\r\n\r\n        <div class=\"columns\">\r\n          <div class=\"column\">\r\n            <Message title=\"Records\" color='light'>\r\n              {#each Object.entries(data) as [key, value], i}\r\n                <p><span class=\"has-text-weight-bold is-size-5\">{key}</span>: {value}</p> <br>\r\n              {/each}\r\n            </Message>\r\n          </div>\r\n\r\n          <div class=\"column\">\r\n\r\n            <div class=\"field\">\r\n              <span class=\"select is-fullwidth\">\r\n                <select class=\"input\" bind:value=\"selected_section\" >\r\n                  <option value=\"\">Select Type</option>\r\n                  {#each Object.entries(data) as [key, value], i}\r\n                    {#if !omitted_field.includes(key)}\r\n                      <option value=\"{key}\">{key}</option>\r\n                    {/if}\r\n                  {/each}\r\n                </select>\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\" style=\"text-transform: capitalize;\">{selected_section}</label>\r\n                {#if data[selected_section]}\r\n                  <textarea class=\"textarea\" readonly placeholder=\"{selected_section}...\" bind:value=\"data[selected_section]\" style=\"height: 15rem;\"></textarea>\r\n                {:else}\r\n                  <textarea class=\"textarea\" readonly placeholder=\"{selected_section}...\" style=\"height: 15rem;\"></textarea>\r\n                {/if}\r\n              </p>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"column\">\r\n            <p class=\"title is-5\">Suggestions</p>\r\n\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\" style=\"text-transform: capitalize;\">{selected_section} Symptoms in the System</label>\r\n                  <SearchableSelect\r\n                    data=\"{searchable_withkey[selected_section]}\"\r\n                    placeholder=\"Choose...\"\r\n                    bind:_name=\"selected_keyed_symp\"\r\n                    searchKey=\"name\"\r\n                    searchValue=\"id\"\r\n                  />\r\n              </p>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\" style=\"text-transform: capitalize;\">All Symptoms in the System</label>\r\n                  <SearchableSelect\r\n                    data=\"{searchable_symp}\"\r\n                    placeholder=\"Choose...\"\r\n                    bind:_name=\"selected_symp\"\r\n                    searchKey=\"name\"\r\n                    searchValue=\"id\"\r\n                  />\r\n              </p>\r\n            </div>\r\n            <div class=\"field\">\r\n              <p class=\"control\">\r\n                <label class=\"label\">&nbsp;</label>\r\n                <SubmitButton bind:disabled classes=\"is-primary is-medium is-pulled-right\" icon=\"save\" icon_size=\"small\" text=\"Save History\" bind:tracker />\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Panel>\r\n    </form>\r\n      <br>\r\n  {/if}\r\n\r\n\r\n\r\n  {#if !has_searched}\r\n    <Sections\r\n      bind:data\r\n      bind:remedies\r\n      bind:filterFields\r\n      bind:selected_section\r\n      on:reset=\"reset(event)\"\r\n    />\r\n\r\n  {/if}\r\n\r\n  </ViewScaffold>\r\n</div>\r\n\r\n<script>\r\n  import Model from '../../../models/histories';\r\n  import Remedies from '../../../models/remedies';\r\n\r\n  import Router from '../../../services/router';\r\n  import { Icon, Notification, Panel, Message } from '@kws3/helpers';\r\n  import { SubmitButton, ConfirmButton } from '@kws3/buttons';\r\n  import SearchableSelect from '@kws3/searchable-select';\r\n  import PatientAdd from '../search/helpers/PatientAdd.html';\r\n  import PatientSearch from '../helpers/PatientSearch.html';\r\n  import Sections from '../search/helpers/Sections.html';\r\n\r\n  export default {\r\n    components: {\r\n      ViewScaffold: '../../helpers/ViewScaffold.html',\r\n      PageTitle: '../../helpers/PageTitle.html',\r\n      Panel, Notification, SubmitButton, PatientSearch, Message,\r\n      SearchableSelect, ConfirmButton, PatientAdd, Sections\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        is_loading: false,\r\n        is_error: false,\r\n        error_message: '',\r\n        is_active_case_modal: false,\r\n        selected_section: '',\r\n        selected_symp: '',\r\n        selected_keyed_symp: '',\r\n        result_symptoms: '',\r\n        remedies: {},\r\n        data: {},\r\n        remedy_found: {},\r\n        omitted_field: [ 'id', 'name', 'created', 'modified', 'deleted', 'patient', 'treatments'],\r\n        patient: {\r\n          name: '',\r\n          age: '',\r\n          gender: '',\r\n          phone: '',\r\n          address: '',\r\n          patient_type: 'none'\r\n        },\r\n        tracker: {\r\n          saving: false,\r\n          saved: false,\r\n          error: false,\r\n        },\r\n        page: {\r\n          title: 'Add Case History',\r\n          icon: 'vcard-o',\r\n          icon_badge: 'plus'\r\n        },\r\n        valid:false\r\n      }\r\n    },\r\n    computed: {\r\n      disabled: ({data, tracker}) => tracker.saving || tracker.saved || !Object.keys(data).length || !data.patient,\r\n      has_searched: ({remedy_found}) => Object.keys(remedy_found).length,\r\n      user_role: ({ $user }) => $user && $user.role,\r\n      filterFields: ({remedies, omitted_field, data}) => {\r\n\r\n        let last = ['built', 'constitution', 'diathesis', 'miasm', 'temperament', 'temperature_and_weather',\r\n         'thermal_sensitivity', 'sensation', 'tendency_take_cold', 'desires', 'aversions', 'birth_history_milestones',\r\n         'tissues', 'stages_and_states', 'attacks_and_side', 'ailments_from', 'affections', 'clinical', 'modalities',\r\n         'mental_state_and_disorders', 'appearance_and_behavior', 'attention_and_concentration', 'expression',\r\n         'consciousness', 'mood_and_affect', 'memory', 'speech', 'thoughts_and_ideas', 'perception', 'intelligence',\r\n         'judgment', 'fear_and_live_alone', 'boring', 'peaceful', 'anger', 'hobby', 'habit', 'addiction', 'nutrition',\r\n         'anaemia', 'cyanosis', 'dehydration', 'jaundice', 'pulse', 'breathing', 'peculiar_rare_symptoms'\r\n        ];\r\n\r\n        let filtered = [];\r\n        if(remedies.length){\r\n          for(let [key, value] of Object.entries(remedies[0])) {\r\n            if( !last.includes(key) && !omitted_field.includes(key)){\r\n              filtered.push(key)\r\n            }\r\n          }\r\n          filtered.push(...last)\r\n          // filtered.forEach( (field) => {\r\n          //   data[field] = null;\r\n          // })\r\n          return filtered\r\n        }\r\n      },\r\n      loadSymptoms: ({remedies}) => {\r\n        let symptoms = {}\r\n        let _symp = []\r\n\r\n        for(let i in remedies){\r\n          Object.entries(remedies[i]).forEach(([key, value]) => {\r\n          _symp[key] = []\r\n          })\r\n          break;\r\n        }\r\n        for(let item in remedies){\r\n          let single = remedies[item];\r\n\r\n          Object.entries(single).forEach(([key, value]) => {\r\n            if(value){\r\n              if(typeof value == 'string'){\r\n                _symp[key].push(value.split(','))\r\n              }\r\n              symptoms[key] = (symptoms[key] ? symptoms[key] : '') + ', ' + value;\r\n            }\r\n          })\r\n        }\r\n        return _symp\r\n      },\r\n      searchable_withkey({loadSymptoms}){\r\n        let final = [], total = 0;\r\n\r\n        Object.entries(loadSymptoms).forEach(([key, value]) => {\r\n          let one = loadSymptoms[key];\r\n            final[key] = [];\r\n            for(let i in one){\r\n              if(Array.isArray(one[i])){\r\n                for(let ind in one[i]){\r\n                  final[key].push({ id: total++, name: one[i][ind] })\r\n                }\r\n              }\r\n            }\r\n          })\r\n        return final\r\n      },\r\n      searchable_symp({loadSymptoms}){\r\n        let final = [], total = 0;\r\n        for(let item in loadSymptoms){\r\n          let one = loadSymptoms[item];\r\n\r\n            for(let i in one){\r\n              if(Array.isArray(one[i])){\r\n                for(let ind in one[i]){\r\n                  final.push({ id: total++, name: one[i][ind] })\r\n                }\r\n              }\r\n            }\r\n          }\r\n        return final\r\n      }\r\n    },\r\n    oncreate(){\r\n\r\n      this.on('state', ({ changed, current, previous }) => {\r\n        let {data, selected_section} = this.get()\r\n\r\n        if(current.selected_keyed_symp != previous.selected_keyed_symp){\r\n          // got it selected symptom\r\n          data[selected_section] =  data[selected_section] ? data[selected_section]  + ', ' + current.selected_keyed_symp : current.selected_keyed_symp;\r\n          this.set({data})\r\n        }\r\n\r\n      });\r\n\r\n      this.on('addPatient', patient => {\r\n        let {data} = this.get();\r\n        data.patient = patient;\r\n        this.set({data});\r\n      });\r\n\r\n      this.on('showSymptoms', value => {\r\n        this.showSymptoms(value);\r\n      })\r\n\r\n      this.loadRemedies();\r\n\r\n    },\r\n    methods: {\r\n      loadRemedies(){\r\n        Remedies.getAll({limit:1000})\r\n        .then( (r) => {\r\n          this.set({ remedies: r.response })\r\n        })\r\n        .catch( (r) => {\r\n          console.log(r)\r\n        })\r\n      },\r\n      reset(comp){\r\n        comp && comp.doing()\r\n        this.set({ data: {} })\r\n        this.set({ remedy_found: {} })\r\n        comp && comp.done();\r\n      },\r\n      showSymptoms(value){\r\n        this.set({ result_symptoms: value.symptoms, field_name: value.field })\r\n      },\r\n      saveHistory(){\r\n        let {data} = this.get();\r\n\r\n        this.set({\r\n          tracker: {\r\n            saving: true,\r\n            saved: false,\r\n            error: false\r\n          }\r\n        });\r\n\r\n        Model.create(data)\r\n        .then( (r) => {\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: true,\r\n              error: false\r\n            },\r\n          });\r\n\r\n          setTimeout( () => {\r\n            this.set({ tracker: { saved: false } });\r\n            this.reset();\r\n            Router.navigate('history');\r\n          }, 1500);\r\n\r\n        })\r\n        .catch( (r) => {\r\n          if (r.response.records.errorCode == '406') {\r\n            this.set({error_message: r.response.records.userMessage});\r\n          }else{\r\n            this.set({error_message: 'There was an error adding history'});\r\n          }\r\n          this.set({\r\n            tracker: {\r\n              saving: false,\r\n              saved: false,\r\n              error: true\r\n            }\r\n          });\r\n\r\n          setTimeout( () => {\r\n            this.set({ tracker: { error: false } });\r\n          }, 3000);\r\n\r\n        });\r\n      },\r\n    }\r\n  }\r\n\r\n</script>"],"names":["data","tracker","saving","saved","Object","keys","length","patient","remedy_found","$user","role","remedies","omitted_field","last","filtered","key","value","entries","includes","push","_symp","i","forEach","item","single","split","loadSymptoms","final","total","one","Array","isArray","ind","id","name","is_loading","is_error","error_message","is_active_case_modal","selected_section","selected_symp","selected_keyed_symp","result_symptoms","age","gender","phone","address","patient_type","error","page","title","icon","icon_badge","valid","[object Object]","Remedies","getAll","limit","then","r","this","set","response","catch","console","log","comp","doing","done","symptoms","field_name","field","get","Model","create","setTimeout","reset","Router","navigate","records","errorCode","userMessage","on","changed","current","previous","showSymptoms","loadRemedies","has_searched","searchable_withkey","searchable_symp","disabled","saveHistory","event","filterFields"],"mappings":"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"}