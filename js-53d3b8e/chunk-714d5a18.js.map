{"version":3,"file":"chunk-714d5a18.js","sources":["../../../src/components/helpers/FileUpload.html"],"sourcesContent":["<div class=\"file-upload {classes} is-{_error ? 'danger' : ''} {(disabled || _is_uploading || _is_finished) ? 'is-disabled' : ''} {_is_finished ? 'is-success' : ''}\">\r\n  <div class=\"file-upload-inner\">\r\n    <div class=\"up-icon\">\r\n      {#if _is_uploading}\r\n        <span class=\"loader\"></span>\r\n      {:elseif _is_finished}\r\n        <Icon size=\"\" icon=\"check-circle\" fa_class=\"fa-lg\" />\r\n      {:else}\r\n        <Icon size=\"\" icon=\"arrow-circle-up\" fa_class=\"fa-lg\" />\r\n      {/if}\r\n    </div>\r\n    <div class=\"file\">\r\n      {#if _is_uploading}\r\n        <div class=\"upload-progress\">\r\n          <div class=\"progress-inner\">\r\n            <div class=\"bar\" style=\"width:{progress}%\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"progress-caption\">{progress}% - Uploading...</div>\r\n      {:elseif _is_finished}\r\n        <div class=\"filename\">Upload complete!</div>\r\n      {:else}\r\n        <div class=\"filename\">{_filename}</div>\r\n      {/if}\r\n    </div>\r\n    <input ref:uploadInput type=\"file\" name=\"file\" on:change=\"updateFile()\" disabled=\"{(disabled || _is_uploading || _is_finished)}\">\r\n  </div>\r\n  <div class=\"level is-mobile\">\r\n    {#if _error}\r\n      <div class=\"level-item\" style=\"max-width:100%\">\r\n        <span class=\"help is-{_error ? 'danger' : ''}\">{_error_message}</span>\r\n      </div>\r\n    {:else}\r\n      <div class=\"level-left\">\r\n        <div class=\"level-item\">\r\n          <span class=\"help\">Max size: {maxFileSize}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"level-item\" style=\"max-width:100%\">\r\n        <span class=\"help is-warning\">{info}</span>\r\n      </div>\r\n      <div class=\"level-right\">\r\n        <span class=\"help\">{fileTypes}</span>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<script>\r\nimport { Icon } from '@kws3/helpers';\r\n\r\nvar formatFileSize = (n) => {\r\n  if(n===undefined||/\\D/.test(n)){return \"N/A\"}\r\n  if(n>1073741824){return Math.round(n/1073741824,1)+\" GB\"}\r\n  if(n>1048576){return Math.round(n/1048576,1)+\" MB\"}\r\n  if(n>1024){return Math.round(n/1024,1)+\" KB\"}\r\n  return n+\" b\"\r\n}\r\n\r\nexport default {\r\n  components:{\r\n    Icon,\r\n    },\r\n  data(){\r\n    return {\r\n      message: 'Choose File...',\r\n      info: '',\r\n      max:5000000,\r\n      allowed:'*',\r\n      classes:'', //is-primary, is-success etc\r\n      disabled: false,\r\n      _filename:'No file selected',\r\n      _error: false,\r\n      _error_message: '',\r\n      _is_uploading: false,\r\n      _is_finished: false,\r\n      _total: 0,\r\n      _uploaded:0\r\n    };\r\n  },\r\n  computed:{\r\n    fileTypes({ allowed }){\r\n      if(allowed != '*' && typeof allowed.length != 'undefined'){\r\n        return allowed.join(', ');\r\n      }\r\n      return '';\r\n    },\r\n    progress({ _total, _uploaded }){\r\n      return Math.floor((_uploaded / _total) * 100);\r\n    },\r\n    maxFileSize({ max }){\r\n      return formatFileSize(max)\r\n    }\r\n  },\r\n  oncreate(){\r\n    this.uploadField = this.refs.uploadInput;\r\n    this.set({_filename: this.get().message});\r\n  },\r\n  methods:{\r\n    updateFile(){\r\n      var el = this.uploadField,\r\n      val = el.value,\r\n      { max, allowed }  = this.get(),\r\n      maxSize = max,\r\n      ext = '',\r\n      size = 0,\r\n      file = null,\r\n      valid = true;\r\n\r\n      this.FormData = new FormData();\r\n\r\n      this.set({\r\n        '_error': false,\r\n        '_error_message': ''\r\n      })\r\n\r\n      try{file=el.files[0];}catch(e){}\r\n\r\n      if(val === ''){\r\n        val = \"No file selected\";\r\n      }else{\r\n        if(file){\r\n          size = file.fileSize||file.size\r\n        }else{\r\n          size = 0\r\n        }\r\n        val = val.split(/[\\/\\\\]+/);\r\n        val = val[(val.length - 1)];\r\n        ext = val.split(/\\./);\r\n        ext = ext[(ext.length - 1)];\r\n        ext = ext.toLowerCase();\r\n        if(size == 0){\r\n          valid = false;\r\n          val = \"No file selected\";\r\n        }\r\n\r\n        //check if file extension is allowed\r\n        if(allowed != '*'){\r\n          if(typeof allowed.length != 'undefined'){\r\n            if(allowed.indexOf(ext) === -1){\r\n              valid = false;\r\n              this.set({\r\n                '_error': true,\r\n                '_error_message': 'Files of type '+ext+' are not allowed.\\n Allowed file types: ' + this.get().fileTypes,\r\n              });\r\n              el.value = \"\";\r\n              val = \"No file selected\";\r\n            }\r\n          }\r\n        }\r\n\r\n        //check if file size exceeds\r\n        if(maxSize > 0){\r\n          if(size > maxSize){\r\n            valid = false;\r\n            this.set({\r\n              '_error': true,\r\n              '_error_message': 'File size is too large. Maximum allowed file size is ' + formatFileSize(maxSize),\r\n            });\r\n            el.value = \"\";\r\n            val = \"No file selected\";\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      this.set({_filename: val});\r\n      if (valid) {\r\n        this.set({_total: size});\r\n        this.FormData.append(\"userfile\", file);\r\n        this.fire('file_chosen', this);\r\n      }\r\n\r\n    },\r\n    getFile(){\r\n      return {\r\n        name: this.get()._filename,\r\n        size: this.get()._total,\r\n        file: this.FormData\r\n      };\r\n    },\r\n    progress(uploaded_amount){\r\n      this.set({\r\n        '_is_uploading': true,\r\n        '_uploaded': uploaded_amount\r\n      });\r\n    },\r\n    uploaded(){\r\n      this.set({\r\n        '_is_uploading': false,\r\n        '_is_finished': true\r\n      });\r\n      setTimeout(() => {\r\n        this.set({\r\n          '_is_finished': false,\r\n          '_total': 0,\r\n          '_uploaded': 0,\r\n          '_filename': this.get().message\r\n        });\r\n        this.FormData = null;\r\n        this.uploadField.value = '';\r\n        this.uploadField.files = null;\r\n      }, 3000)\r\n    },\r\n    error(msg){\r\n      this.set({\r\n        '_is_uploading': false,\r\n        '_error': true,\r\n        '_error_message': msg,\r\n        '_filename': this.get().message\r\n      });\r\n      this.FormData = null;\r\n      this.uploadField.value = '';\r\n      this.uploadField.files = null;\r\n    }\r\n  }\r\n}\r\n</script>"],"names":["formatFileSize","n","undefined","test","Math","round","allowed","length","join","_total","_uploaded","floor","max","message","info","classes","disabled","_filename","_error","_error_message","_is_uploading","_is_finished","[object Object]","el","this","uploadField","val","value","get","maxSize","ext","size","file","valid","FormData","set","files","e","fileSize","split","toLowerCase","indexOf","fileTypes","append","fire","name","uploaded_amount","setTimeout","msg","refs","uploadInput","updateFile","progress","maxFileSize"],"mappings":"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"}